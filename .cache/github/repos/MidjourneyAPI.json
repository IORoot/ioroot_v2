{
  "id": 824574974,
  "node_id": "R_kgDOMSYD_g",
  "name": "MidjourneyAPI",
  "full_name": "IORoot/MidjourneyAPI",
  "private": false,
  "owner": {
    "login": "IORoot",
    "id": 8770616,
    "node_id": "MDQ6VXNlcjg3NzA2MTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8770616?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IORoot",
    "html_url": "https://github.com/IORoot",
    "followers_url": "https://api.github.com/users/IORoot/followers",
    "following_url": "https://api.github.com/users/IORoot/following{/other_user}",
    "gists_url": "https://api.github.com/users/IORoot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IORoot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IORoot/subscriptions",
    "organizations_url": "https://api.github.com/users/IORoot/orgs",
    "repos_url": "https://api.github.com/users/IORoot/repos",
    "events_url": "https://api.github.com/users/IORoot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IORoot/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "html_url": "https://github.com/IORoot/MidjourneyAPI",
  "description": "Run MidjourneyAPI using Github Action",
  "fork": false,
  "url": "https://api.github.com/repos/IORoot/MidjourneyAPI",
  "forks_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/forks",
  "keys_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/teams",
  "hooks_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/hooks",
  "issue_events_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/issues/events{/number}",
  "events_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/events",
  "assignees_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/assignees{/user}",
  "branches_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/branches{/branch}",
  "tags_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/tags",
  "blobs_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/languages",
  "stargazers_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/stargazers",
  "contributors_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/contributors",
  "subscribers_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/subscribers",
  "subscription_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/subscription",
  "commits_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/issues/comments{/number}",
  "contents_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/contents/{+path}",
  "compare_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/merges",
  "archive_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/downloads",
  "issues_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/issues{/number}",
  "pulls_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/labels{/name}",
  "releases_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/releases{/id}",
  "deployments_url": "https://api.github.com/repos/IORoot/MidjourneyAPI/deployments",
  "created_at": "2024-07-05T12:28:10Z",
  "updated_at": "2025-07-23T14:59:05Z",
  "pushed_at": "2025-07-23T14:59:00Z",
  "git_url": "git://github.com/IORoot/MidjourneyAPI.git",
  "ssh_url": "git@github.com:IORoot/MidjourneyAPI.git",
  "clone_url": "https://github.com/IORoot/MidjourneyAPI.git",
  "svn_url": "https://github.com/IORoot/MidjourneyAPI",
  "homepage": "",
  "size": 1697,
  "stargazers_count": 0,
  "watchers_count": 0,
  "language": "TypeScript",
  "has_issues": true,
  "has_projects": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": false,
  "has_discussions": false,
  "forks_count": 0,
  "mirror_url": null,
  "archived": false,
  "disabled": false,
  "open_issues_count": 0,
  "license": {
    "key": "apache-2.0",
    "name": "Apache License 2.0",
    "spdx_id": "Apache-2.0",
    "url": "https://api.github.com/licenses/apache-2.0",
    "node_id": "MDc6TGljZW5zZTI="
  },
  "allow_forking": true,
  "is_template": false,
  "web_commit_signoff_required": false,
  "topics": [
    "ai",
    "github-action",
    "midjourney"
  ],
  "visibility": "public",
  "forks": 0,
  "open_issues": 0,
  "watchers": 0,
  "default_branch": "master",
  "permissions": {
    "admin": true,
    "maintain": true,
    "push": true,
    "triage": true,
    "pull": true
  },
  "readme_content": "![header](https://raw.githubusercontent.com/IORoot/MidjourneyAPI/refs/heads/master/header.jpg)\n\n# midjourney-client\n\nNode.js client for the unofficial MidJourney api.\n\n## Usage\n\nUse the Github Action to run the Midjourney API.\n\n## What's new\n\n- [face swap](https://github.com/erictik/midjourney-client/blob/main/example/faceswap.ts)\n- [niji bot](https://github.com/erictik/midjourney-client/blob/main/example/imagine-niji.ts)\n- [custom zoom](https://github.com/erictik/midjourney-client/blob/main/example/customzoom.ts)\n- [remix mode](https://github.com/erictik/midjourney-client/blob/main/example/variation-ws.ts)\n\n## Example\n\nTo run the included example, you must have [Node.js](https://nodejs.org/en/) installed. Then, run the following commands in the root directory of this project:\n\n1. clone the repository\n\n   ```bash\n   git clone https://github.com/erictik/midjourney-client.git\n   cd midjourney-client\n   ```\n\n2. install dependencies\n\n   ```bash\n   yarn\n   # or npm\n   npm install\n   ```\n\n3. set the environment variables\n\n- [Login Discord](https://discord.com/channels/@me)`F12` _OR_ `Ctrl + Shift + I` (or `Command + Option + I` on Mac) to open the developer tools _AND_ paste the following code into the console\n\n  ```javascript\n  window.webpackChunkdiscord_app.push([\n    [Math.random()],\n    {},\n    (req) => {\n      for (const m of Object.keys(req.c)\n        .map((x) => req.c[x].exports)\n        .filter((x) => x)) {\n        if (m.default && m.default.getToken !== undefined) {\n          return copy(m.default.getToken());\n        }\n        if (m.getToken !== undefined) {\n          return copy(m.getToken());\n        }\n      }\n    },\n  ]);\n  console.log(\"%cWorked!\", \"font-size: 50px\");\n  console.log(`%cYou now have your token in the clipboard!`, \"font-size: 16px\");\n  ```\n\n  OR [use network your Discord TOKEN](https://www.androidauthority.com/get-discord-token-3149920/)\n\n- [Join my discord server](https://discord.com/invite/GavuGHQbV4)\n\n  ```\n  export SERVER_ID=\"1082500871478329374\"\n  export CHANNEL_ID=\"1094892992281718894\"\n  ```\n\n- OR [Create a server](https://discord.com/blog/starting-your-first-discord-server) and [Invite Midjourney Bot to Your Server](https://docs.midjourney.com/docs/invite-the-bot)\n\n  ```bash\n  # How to get server and channel ids:\n  # when you click on a channel in your server in the browser\n  # expect to have the follow URL pattern\n  # `https://discord.com/channels/$SERVER_ID/$CHANNEL_ID`\n  export SERVER_ID=\"your-server-id\"\n  export CHANNEL_ID=\"your-channel-id\"\n  ```\n\n- wirte your token to `.env` file or set the environment variables\n\n  ```bash\n    #example variables, please set up yours\n\n    export SERVER_ID=\"1082500871478329374\"\n    export CHANNEL_ID=\"1094892992281718894\"\n    export SALAI_TOKEN=\"your-discord-token\"\n  ```\n\n- Then, run the example with the following command:\n\n  ```bash\n  npx tsx example/imagine-ws.ts\n  ```\n\n  OR\n\n  ```bash\n  yarn example:imagine\n  # or npm\n  npm run example:imagine\n  ```\n\n- [more example](./example/)\n\n## Usage\n\n1. Install\n\n   ```bash\n   npm i midjourney\n   # or\n   yarn add midjourney\n   ```\n\n2. config param\n   ```typescript\n   export interface MJConfigParam {\n     SalaiToken: string; //DISCORD_TOKEN\n     ChannelId?: string; //DISCORD_CHANNEL_ID\n     ServerId?: string; //DISCORD_SERVER_ID\n     BotId?: typeof MJBot | typeof NijiBot; //DISCORD_BOT_ID MJBot OR NijiBot\n     Debug?: boolean; // print log\n     ApiInterval?: number; //ApiInterval request api interval\n     Limit?: number; //Limit of get message list\n     MaxWait?: number;\n     Remix?: boolean; //Remix:true use remix mode\n     Ws?: boolean; //Ws:true use websocket get discord message (ephemeral message)\n     HuggingFaceToken?: string; //HuggingFaceToken for verify human\n     SessionId?: string;\n     DiscordBaseUrl?: string;\n     ImageProxy?: string;\n     WsBaseUrl?: string;\n     fetch?: FetchFn; //Node.js<18 need node.fetch Or proxy\n     WebSocket?: WebSocketCl; //isomorphic-ws Or proxy\n   }\n   ```\n3. Use Imagine 、Variation and Upscale\n\n   ```typescript\n   import { Midjourney } from \"midjourney\";\n   const client = new Midjourney({\n     ServerId: <string>process.env.SERVER_ID,\n     ChannelId: <string>process.env.CHANNEL_ID,\n     SalaiToken: <string>process.env.SALAI_TOKEN,\n     Debug: true,\n     Ws: true, //enable ws is required for remix mode (and custom zoom)\n   });\n   await client.init();\n   const prompt =\n     \"Christmas dinner with spaghetti with family in a cozy house, we see interior details , simple blue&white illustration\";\n   //imagine\n   const Imagine = await client.Imagine(\n     prompt,\n     (uri: string, progress: string) => {\n       console.log(\"loading\", uri, \"progress\", progress);\n     }\n   );\n   console.log(Imagine);\n   if (!Imagine) {\n     console.log(\"no message\");\n     return;\n   }\n   //U1 U2 U3 U4 V1 V2 V3 V4  \"Vary (Strong)\" ...\n   //⬅️,⬆️,⬇️,➡️\n   const V1CustomID = Imagine.options?.find((o) => o.label === \"V1\")?.custom;\n   if (!V1CustomID) {\n     console.log(\"no V1\");\n     return;\n   }\n   // Varition V1\n   const Varition = await client.Custom({\n     msgId: <string>Imagine.id,\n     flags: Imagine.flags,\n     customId: V1CustomID,\n     content: prompt, //remix mode require content\n     loading: (uri: string, progress: string) => {\n       console.log(\"loading\", uri, \"progress\", progress);\n     },\n   });\n   console.log(Varition);\n   const U1CustomID = Imagine.options?.find((o) => o.label === \"U1\")?.custom;\n   if (!U1CustomID) {\n     console.log(\"no U1\");\n     return;\n   }\n   // Upscale U1\n   const Upscale = await client.Custom({\n     msgId: <string>Imagine.id,\n     flags: Imagine.flags,\n     customId: U1CustomID,\n     loading: (uri: string, progress: string) => {\n       console.log(\"loading\", uri, \"progress\", progress);\n     },\n   });\n   if (!Upscale) {\n     console.log(\"no Upscale\");\n     return;\n   }\n   console.log(Upscale);\n   const zoomout = Upscale?.options?.find((o) => o.label === \"Custom Zoom\");\n   if (!zoomout) {\n     console.log(\"no zoomout\");\n     return;\n   }\n   // Custom Zoom\n   const CustomZoomout = await client.Custom({\n     msgId: <string>Upscale.id,\n     flags: Upscale.flags,\n     content: `${prompt} --zoom 2`, // Custom Zoom  require content\n     customId: zoomout.custom,\n     loading: (uri: string, progress: string) => {\n       console.log(\"loading\", uri, \"progress\", progress);\n     },\n   });\n   console.log(CustomZoomout);\n   ```\n\n\n\n## route-map\n\n- [x] `/imagine` `variation` `upscale` `reroll` `blend` `zoomout` `vary`\n- [x] `/info`\n- [x] `/fast ` and `/relax `\n- [x] [`/prefer remix`](https://github.com/erictik/midjourney-client/blob/main/example/prefer-remix.ts)\n- [x] [`variation (remix mode)`](https://github.com/erictik/midjourney-client/blob/main/example/variation-ws.ts)\n- [x] `/describe`\n- [x] [`/shorten`](https://github.com/erictik/midjourney-client/blob/main/example/shorten.ts)\n- [x] `/settings` `reset`\n- [x] verify human\n- [x] [proxy](https://github.com/erictik/midjourney-discord/blob/main/examples/proxy.ts)\n- [x] [niji bot](https://github.com/erictik/midjourney-client/blob/main/example/imagine-niji.ts)\n- [x] [custom zoom](https://github.com/erictik/midjourney-client/blob/main/example/customzoom.ts)\n- [x] autoload command payload\n",
  "readme_html": "https://github.com/IORoot/MidjourneyAPI/blob/master/README.md",
  "last_cached": "2025-07-29T16:32:52.132Z"
}