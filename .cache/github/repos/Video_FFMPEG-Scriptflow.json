{
  "id": 598991805,
  "node_id": "R_kgDOI7PjvQ",
  "name": "Video_FFMPEG-Scriptflow",
  "full_name": "IORoot/Video_FFMPEG-Scriptflow",
  "private": false,
  "owner": {
    "login": "IORoot",
    "id": 8770616,
    "node_id": "MDQ6VXNlcjg3NzA2MTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8770616?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IORoot",
    "html_url": "https://github.com/IORoot",
    "followers_url": "https://api.github.com/users/IORoot/followers",
    "following_url": "https://api.github.com/users/IORoot/following{/other_user}",
    "gists_url": "https://api.github.com/users/IORoot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IORoot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IORoot/subscriptions",
    "organizations_url": "https://api.github.com/users/IORoot/orgs",
    "repos_url": "https://api.github.com/users/IORoot/repos",
    "events_url": "https://api.github.com/users/IORoot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IORoot/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "html_url": "https://github.com/IORoot/Video_FFMPEG-Scriptflow",
  "description": "üéû FFMPEG Utility scripts and JSON scripter. üí°Run multi-stage ffmpeg workflows using a JSON config.",
  "fork": false,
  "url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow",
  "forks_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/forks",
  "keys_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/teams",
  "hooks_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/hooks",
  "issue_events_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/issues/events{/number}",
  "events_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/events",
  "assignees_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/assignees{/user}",
  "branches_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/branches{/branch}",
  "tags_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/tags",
  "blobs_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/languages",
  "stargazers_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/stargazers",
  "contributors_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/contributors",
  "subscribers_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/subscribers",
  "subscription_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/subscription",
  "commits_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/issues/comments{/number}",
  "contents_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/contents/{+path}",
  "compare_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/merges",
  "archive_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/downloads",
  "issues_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/issues{/number}",
  "pulls_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/labels{/name}",
  "releases_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/releases{/id}",
  "deployments_url": "https://api.github.com/repos/IORoot/Video_FFMPEG-Scriptflow/deployments",
  "created_at": "2023-02-08T08:18:45Z",
  "updated_at": "2025-07-27T23:59:39Z",
  "pushed_at": "2025-07-23T16:02:51Z",
  "git_url": "git://github.com/IORoot/Video_FFMPEG-Scriptflow.git",
  "ssh_url": "git@github.com:IORoot/Video_FFMPEG-Scriptflow.git",
  "clone_url": "https://github.com/IORoot/Video_FFMPEG-Scriptflow.git",
  "svn_url": "https://github.com/IORoot/Video_FFMPEG-Scriptflow",
  "homepage": "",
  "size": 110827,
  "stargazers_count": 13,
  "watchers_count": 13,
  "language": "Shell",
  "has_issues": true,
  "has_projects": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": false,
  "has_discussions": false,
  "forks_count": 2,
  "mirror_url": null,
  "archived": false,
  "disabled": false,
  "open_issues_count": 0,
  "license": null,
  "allow_forking": true,
  "is_template": false,
  "web_commit_signoff_required": false,
  "topics": [
    "automation",
    "bash",
    "ffmpeg"
  ],
  "visibility": "public",
  "forks": 2,
  "open_issues": 0,
  "watchers": 13,
  "default_branch": "master",
  "permissions": {
    "admin": true,
    "maintain": true,
    "push": true,
    "triage": true,
    "pull": true
  },
  "readme_content": "![header](https://raw.githubusercontent.com/IORoot/Video_FFMPEG-Scriptflow/refs/heads/master/header.jpg)\n\n<div id=\"top\"></div>\n\n<div align=\"center\">\n\n<h3 align=\"center\">FFMPEG Util scripts and Templates</h3>\n</div>\n\nFFMPEG wrapper scripts and a script runner that reads JSON configuration files. \nThe wrapper scripts provide an interface for executing specific tasks, while the script runner allows users to define a series of tasks to be performed on a set of media files. \nThis automation pipeline saves time and effort, enabling users to execute multiple tasks on numerous media files with a single command.\n\n\n# Highlights\n\n- üèÉ‚Äç‚ôÇÔ∏è Automate FFMPEG steps using a JSON file\n- üí° Simple independent scripts for specific ffmpeg tasks.\n- üèóÔ∏è Build videos in a pipeline automatically\n- üì≤ Download from external sources\n- üì¶ Run bulk tasks on folders of video files\n- üé® Built-in variables for randomness, folders, colour and tailwindcss palettes\n\n# Scripts\n\n| Script               | Description                                                      |\n| -------------------- | ---------------------------------------------------------------- |\n| `ff_append.sh`       | This will concatenate two videos together and re-encode them     |\n| `ff_aspect_ratio.sh` | Changes the container metadata's Display Aspect Ratio (DAR)      |\n| `ff_audio.sh`        | Overlay audio onto video track                                   |\n| `ff_blur.sh`         | Simple blur function using an unsharp mask                       |\n| `ff_colour.sh`       | Change brightness, contrast, gamma, saturation of video          |\n| `ff_concat.sh`       | Concatenate multiple videos together                             |\n| `ff_convert.sh`      | Convert an apple quicktime MOV to MP4 file                        |\n| `ff_crop.sh`         | Crop video to specific size                                       |\n| `ff_cut.sh`          | Cut video from start time to end time.                           |\n| `ff_download.sh`     | Use CURL to download multiple files. Useful for scriptflow.        |\n| `ff_flip.sh`          | Horizontally and/or vertically flip the video                     |\n| `ff_fps.sh`          | Alter the FPS without changing length of video                   |\n| `ff_grouptime.sh`    | Proportionally trims and concats videos to target video duration |\n| `ff_image.sh`        | Make a video from a looped image                                 |\n| `ff_kenburns.sh`     | Generate a video from an image with a zoom-pan effect            |\n| `ff_lut.sh`          | Apply a 3DL/Cube LUT file to a video                              |\n| `ff_middle.sh`       | Remove equal number of seconds from start and end of video       |\n| `ff_overlay.sh`      | Overlay an image or video on top of another video                |\n| `ff_pad.sh`          | Add a background padding around the video                        |\n| `ff_proxy.sh`        | Create a down-scaled,res,fps,crf proxy file for a video           |\n| `ff_rotate.sh`       | Rotate a video in 90 degree increments                           |\n| `ff_scale.sh`        | Change the width and height of the video                         |\n| `ff_sh_runner.sh`    | Run any shell command (dangerous!)                               |\n| `ff_sharpen.sh`      | Simple sharpen function using an unsharp mask                    |\n| `ff_social_media.sh` | Converts the video, ready for various social platforms           |\n| `ff_stack.sh`        | Align two videos vertically, horizontally or in a 2x2 grid.      |\n| `ff_subtitles.sh`    | Use SRT File to overlay hard-embedded subtitles                  |\n| `ff_text.sh`         | Add text (with background box) on top of the video               |\n| `ff_thumbnail.sh`    | Create thumbnail(s) from the video                               |\n| `ff_to_landscape.sh` | Rotate a portrait video to landscape                             |\n| `ff_to_portrait.sh`  | Rotate a landscape video to portrait                             |\n| `ff_transcode.sh`    | Bulk Convert videos to specific file format and specs              |\n| `ff_transition.sh`   | Concatenate multiple videos with transition effects              |\n| `ff_unsharp.sh`      | Use an unsharp mask to blur/sharpen luma,gamma,alpha             |\n| `ff_watermark.sh`    | Overlay a watermark image/video                                  |\n\n\n# Table of Contents\n<!-- TOC -->\n\n- [Highlights](#highlights)\n- [Scripts](#scripts)\n- [Table of Contents](#table-of-contents)\n    - [About The Project](#about-the-project)\n        - [Built With](#built-with)\n        - [Installation](#installation)\n    - [Configs](#configs)\n    - [Script Details](#script-details)\n        - [ff_append.sh](#ff_appendsh)\n            - [Description](#description)\n            - [Flags](#flags)\n            - [Example](#example)\n        - [ff_aspect_ratio.sh](#ff_aspect_ratiosh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_audio.sh](#ff_audiosh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_blur.sh](#ff_blursh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_colour.sh](#ff_coloursh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_concat.sh](#ff_concatsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_crop.sh](#ff_cropsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_cut.sh](#ff_cutsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_download.sh](#ff_downloadsh)\n            - [Flags](#flags)\n            - [Examples](#examples)\n                - [Single Download](#single-download)\n                - [Multiple Downloads](#multiple-downloads)\n                - [Using a URL Source.](#using-a-url-source)\n                - [URL Source randomised strategy.](#url-source-randomised-strategy)\n        - [ff_flip.sh](#ff_flipsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_fps.sh](#ff_fpssh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_grouptime.sh](#ff_grouptimesh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_image.sh](#ff_imagesh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_kenburns.sh](#ff_kenburnssh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_lut.sh](#ff_lutsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_middle.sh](#ff_middlesh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_mov_to_mp4.sh](#ff_mov_to_mp4sh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_pad.sh](#ff_padsh)\n            - [Description](#description)\n            - [Flags](#flags)\n            - [Examples](#examples)\n        - [ff_proxy.sh](#ff_proxysh)\n            - [Flags](#flags)\n        - [ff_rotate.sh](#ff_rotatesh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_scale.sh](#ff_scalesh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_sh_runner.sh](#ff_sh_runnersh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_sharpen.sh](#ff_sharpensh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_social_media.sh](#ff_social_mediash)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_stack.sh](#ff_stacksh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_subtitles.sh](#ff_subtitlessh)\n            - [Description](#description)\n        - [Forced Styles:](#forced-styles)\n            - [Flags](#flags)\n        - [ff_text.sh](#ff_textsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_thumbnail.sh](#ff_thumbnailsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_to_landscape.sh](#ff_to_landscapesh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_to_portrait.sh](#ff_to_portraitsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_transcode.sh](#ff_transcodesh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_transition.sh](#ff_transitionsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_unsharp.sh](#ff_unsharpsh)\n            - [Description](#description)\n            - [Flags](#flags)\n        - [ff_watermark.sh](#ff_watermarksh)\n            - [Description](#description)\n            - [Flags](#flags)\n            - [Examples](#examples)\n    - [ScriptFlow](#scriptflow)\n        - [Blank flags](#blank-flags)\n        - [nulls](#nulls)\n        - [Multiple duplicate scripts](#multiple-duplicate-scripts)\n        - [Scripts with multiple inputs](#scripts-with-multiple-inputs)\n        - [Keyword Replacements](#keyword-replacements)\n            - [<ENV\\_\\*>](#env%5C_%5C)\n            - [<FOLDER_NAME>](#folder_name)\n            - [<FOLDER_TITLE>](#folder_title)\n            - [<DATE_format>](#date_format)\n            - [<RANDOM_VIDEO>](#random_video)\n            - [<RANDOM_VIDEO_FILTER_string>](#random_video_filter_string)\n            - [<RANDOM_COLOUR>](#random_colour)\n            - [<RANDOM_CONTRAST_COLOUR>](#random_contrast_colour)\n            - [<CONSTANT_RANDOM_COLOUR>](#constant_random_colour)\n            - [<CONSTANT_CONTRAST_COLOUR>](#constant_contrast_colour)\n        - [Output & Cleanup](#output--cleanup)\n        - [pwd and file references](#pwd-and-file-references)\n        - [descriptions](#descriptions)\n    - [Customising](#customising)\n    - [Troubleshooting](#troubleshooting)\n        - [Output Files.](#output-files)\n    - [Contributing](#contributing)\n    - [License](#license)\n    - [Contact](#contact)\n    - [Changelog](#changelog)\n        - [Version 1.10](#version-110)\n        - [Version 1.9](#version-19)\n        - [Version 1.8](#version-18)\n        - [Version 1.7](#version-17)\n        - [Version 1.6](#version-16)\n        - [Version 1.5](#version-15)\n        - [Version 1.4](#version-14)\n        - [Version 1.3](#version-13)\n        - [Version 1.2](#version-12)\n        - [Version 1.1](#version-11)\n        - [Version 1.0](#version-10)\n\n<!-- /TOC -->\n\n## 2. About The Project\n\nThis is a collection of scripts to automate simple video editing tasks.\n\nThey can be easily chained together for more complex video effects and tasks by simply using a JSON configuration file.\n\nThese are all based on BASH and FFMPEG.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n### 2.1. Built With\n\nThis project was built with the following frameworks, technologies and software.\n\n-   [JQ](https://stedolan.github.io/jq/)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n### 2.2. Installation\n\nThese are the steps to get up and running with this theme.\n\n1. Clone the repo\n\n```sh\ngit clone https://github.com/IORoot/ffmpeg__bash-scripts\n```\n\n2. Either update your $PATH to include this folder or create a link in `/usr/local/bin` to each script.\n\n```\nPATH=$PATH:$(pwd)\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\nAdditionally:\n\n| Script          | Description                                                          |\n| --------------- | -------------------------------------------------------------------- |\n| `scriptflow.sh` | Reads a JSON configuration file a runs the ff\\_ scripts sequentially |\n\n## Configs\n\nYou can provide any of the scripts a configuration JSON file with the `-C|--config` flag.\nThis JSON file should contain an object with the keys as the flags to the script and the values as the values you would pass on the command line.\n\nFor instance, the following command:\n\n```bash\n./ff_scale.sh -i input_video.mp4 -o output_video.mp4 -w 1920 -h 1080 -l debug\n```\n\nCan have a config.json file that would do the same thing:\n\n```json\n{\n\t\"input\": \"input_video.mp4\",\n\t\"output\": \"output_video.mp4\",\n\t\"width\": \"1920\",\n\t\"height\": \"1080\",\n\t\"loglevel\": \"debug\"\n}\n```\n\nAnd run like this:\n\n```bash\n./ff_scale.sh -c config.json\n```\n\nFor scripts that require multiple inputs, you can use `input1`, `input2`, etc... Suffix 1 or 2 digits.\n\n## Script Details\n\n### `ff_append.sh`\n\n#### Description\n\nThis will append two files together while re-encoding them to be the same codec. Good if you need to change the codec of the video by transcoding them. Note the `ff_concat.sh` script is better if you do not need to transcode.\n\n![append](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/append.svg)\n\n#### Flags\n\n```bash\nFlags:\n-f | --first <FIRST_INPUT_FILE>\n    The name of the first input file.\n\n-s | --second <SECOND_INPUT_FILE>\n    The name of the second input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_appended.mp4\n    The name of the output file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n#### Example\n\n```bash\n./ff_append.sh -f landscape2.mp4 -s landscape.mp4 -o out.mp4\n```\n\n---\n\n### `ff_aspect_ratio.sh`\n\n#### Description\n\nThis will alter the container metadata (DAR) of the video to the new aspect ratio.\n\n![aspect_ratio](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/aspect_ratio.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_aspect_ratio.mp4\n    The name of the output file.\n\n-a | --aspect <ASPECTRATIO>\n    Target aspect ratio should be expressed as X:Y\n    Default is 1:1\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n\n### `ff_audio.sh`\n\n#### Description\n\nThis will overlay audio on top of the video.\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-a | --audio <INPUT_FILE>\n    The name of an audio file.\n\n-o | --output <OUTPUT_FILE>\n    Default is %s \"${OUTPUT_FILENAME}\"\n    The name of the output file.\n\n-s | --start <SECONDS>\n    Start time in seconds of when to play audio.\n\n-p | --speed <SPEED>\n    Playback speed of the audio.\n\n-r | --remove\n    tRemove the audio.\n    \n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_blur.sh`\n\n#### Description\n\nSimple version of unsharp mask.\n\n```mermaid\n\ngraph LR\n    input[\"-i input.mp4\"]\n    pixels[\"--pixels 7</br>(Use a 7x7 pixel square for detection)\"]\n    sharpen[\"--sharpen 3.2</br>(Using the 7x7 grid, sharpen by 3.2)\"]\n    output[\"output.mp4\"]\n\n    input-->pixels-->sharpen-->output\n```\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_sharpen.mp4\n    The name of the output file.\n\n-p | --pixels <AMOUNT>\n    Both the X and Y matrix horizontal size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-s | --sharpen <AMOUNT>\n    Set the sharpen strength. It must be a floating point number. -2.0 to 5.0. Default value is 1.0.\n    Negative values will blur the input video, while positive values will sharpen it, a value of zero will disable the effect.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_colour.sh`\n\n#### Description\n\nChange the Brightness, Contrast, Gamma, Gamma-Weight and Saturation of a video.\n\n```mermaid\n\ngraph LR\n\tinput[\"-i input.mp4\"]\n\tbrightness[\"--brightness 0.33</br>(Increase brightness by 33%)\"]\n\tcontrast[\"--contrast 40</br>(Increase contrast by 4%)\"]\n\tgamma[\"--gamma 5.0</br>(Increase gamma by 50%)\"]\n\tweight[\"--weight 0.2</br>(Increase gamma weight by 20%)\"]\n\tsaturation[\"--saturation 1.0</br>(Increase saturation by 0.33%)\"]\n\toutput[\"output.mp4\"]\n\n\tinput-->brightness-->contrast-->gamma-->weight-->saturation-->output\n```\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_colour.mp4\n    The name of the output file.\n\n-b | --brightness <BRIGHTNESS>\n    Change the brightness value from -1.0 to 1.0.\n\n-c | --contrast <CONTRAST>\n    Change the contrast value from -1000.0 to 1000.0.\n\n-g | --gamma <GAMMA>\n    Change the gamma value from 0.1 to 10.0.\n\n-s | --saturation <SATURATION>\n    Change the saturation value from 0.0 to 3.0.\n\n-w | --weight <GAMMAWEIGHT>\n    Change the gamma weight value from 0.0 to 1.0.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_concat.sh`\n\n#### Description\n\nConcatenate multiple videos into one output video.\n\nThe first video will set the FPS and dimensions, so make sure all videos are the same otherwise you'll get slow-motion.\n\n![concat](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/concat.svg)\n\n#### Flags\n\n```\n-o | --output <OUTPUT_FILE>\n    The name of the output file. Specify only one.\n\n-i | --input <INPUT_FILE>\n    The name of an input file (or folder). Specify as many as you wish.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_crop.sh`\n\n#### Description\n\nCrop video to specific size\n\n```mermaid\n\ngraph LR\n\tinput[\"-i input.mp4<br/>(1920x1080)\"]\n\twidth[\"-w 720<br/>Width of new frame\"]\n\theight[\"-h 720<br/>Height of new frame\"]\n\txpixels[\"-x (iw-ow)/2<br/>Put video horizontally in center of frame\"]\n\typixels[\"-y (ih-oh)/2<br/>Put video vertically in center of frame\"]\n\toutput[\"output.mp4\"]\n\n\tinput-->width-->height-->xpixels-->ypixels-->output\n```\n\n![crop](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/crop.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_crop.mp4\n    The name of the output file.\n\n-w | --width <WIDTH>\n    Width of the output video. Default: 600px.\n\n-h | --height <HEIGHT>\n    Height of the output video. Default: 600px.\n\n-x | --xpixels <PIXELS>\n    Where to position the video in the frame on X-Axis from left. Default center: (iw-ow)/2\n\n-y | --ypixels <PIXELS>\n    Where to position the video in the frame on Y-Axis from top. Default center: (ih-oh)/2\n\n    The width, height, x and y parameters also have access to the following variables:\n    - iw : The input video's width.\n    - ih : The input video's height.\n    - ow : The output video's width.\n    - oh : The output video's height.\n    These can be used to calculate areas of the screen. For example:\n    The center of the screen on x-axis is 'x=(ow-iw)/2\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_cut.sh`\n\n#### Description\n\nChange the length of the video.\n\n![cut](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/cut.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_cut.mp4\n    The name of the output file.\n\n-s | --start <TIMESTAMP>\n    When to start the cut. Format is HH:MM:SS. Default is the beginning of the video. 00:00:00.\n\n-e | --end <TIMESTAMP>\n    When to finish the cut. Format is HH:MM:SS. Default is 10 seconds into the video. 00:00:10.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_download.sh`\n\nDownload a video or file to use in the scriptflow. Uses CURL.\n\nVery handy to get a remote file(s) images/videos to then use in your video.\n\n#### Flags\n\n```\n-i | --input <INPUT_URL>\n    The input url to download.\n\n-o | --output <OUTPUT_FILE>\n    Default is %s \"${OUTPUT_FILENAME}\"\n    The name of the output file.\n\n-u | --urlsource <FILE_WITH_LIST>\n    A URL of a txt file with a list of all files to use as inputs. Separated one per line.\n\n-s | --strategy <STRATEGY>\n    5 A number. First 5 videos from inputs. Prefix number on output filename. Default 1.\n    ~5 Tilde(~) followed by a number. Random 5 videos from inputs. Prefix number on output filename.\n\n-C | --config <CONFIG_FILE>\n    Supply a config.json file with settings instead of command-line. Requires JQ installed.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n\n```\n\n#### Examples\n\nThe download script is quite a powerful tool to auto-generate your videos. It can incorporate randomness if needed.\n\nHere are some examples using the `scriptflow` tool and the JSON input format:\n\n---\n\n##### Single Download\n\nThis example will just download a single file from a URL.\n\n```json\n{\n\t\"ff_download\": {\n\t\t\"description\": \"Download the my watermark image\",\n\t\t\"input\": \"http://mywebsite.com/logos/logo_white_solid.jpg\",\n\t\t\"output\": \"logo_white_solid.jpg\"\n\t}\n}\n```\n\n---\n\n##### Multiple Downloads\n\nThis time we will download two images that will be output as `1_logo_solid.jpg` and `2_logo_solid.jpg`.\n\n```json\n{\n\t\"ff_download\": {\n\t\t\"description\": \"Download the my watermark image\",\n\t\t\"input1\": \"http://mywebsite.com/logos/logo_white_solid.jpg\",\n\t\t\"input2\": \"http://mywebsite.com/logos/logo_blue_solid.jpg\",\n\t\t\"output\": \"logo_solid.jpg\",\n\t\t\"strategy\": \"2\"\n\t}\n}\n```\n\n---\n\n##### Using a URL Source.\n\nYou can provide a URL of a text file listing all of the available files and download some from that list.\nFor example, you provide the following file:\n\n`filelist.txt`\n\n```text\nmy_video_01.mp4\nmy_video_02.mp4\nmy_video_03.mp4\nmy_video_04.mp4\nmy_video_05.mp4\n```\n\nAnd host that file (and those video files) at: `http://mywebsite.com/filelist.txt`\n\nNow, you can use that text file as a reference and use the `strategy` field to download the first 2.\n\n```json\n{\n\t\"ff_download\": {\n\t\t\"description\": \"Download the my watermark image\",\n\t\t\"urlsource\": \"http://mywebsite.com/filelist.txt\",\n\t\t\"output\": \"ff_download.mp4\",\n\t\t\"strategy\": \"2\"\n\t}\n}\n```\n\nThis will download files `my_video_01.mp4` and `my_video_02.mp4`. These will be output as `1_ff_download.mp4` and `2_ff_download.mp4`.\n\n---\n\n##### URL Source randomised strategy.\n\nThe true power is found with the randomised strategy. Using the tilde `~` symbol as a prefix on the strategy you can specify how many _random_ files to download.\n\n```json\n{\n\t\"ff_download\": {\n\t\t\"description\": \"Download the my watermark image\",\n\t\t\"urlsource\": \"http://mywebsite.com/filelist.txt\",\n\t\t\"output\": \"ff_download.mp4\",\n\t\t\"strategy\": \"~2\"\n\t}\n}\n```\n\nThis will download two random files `my_video_03.mp4` and `my_video_05.mp4`. These will be output as `1_ff_download.mp4` and `2_ff_download.mp4`.\n\n---\n\n### `ff_flip.sh`\n\n#### Description\n\nFlip video horizontally and/or vertically.\n\n![flip](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/flip.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_flipped.mp4\n    The name of the output file.\n\n-h | --horizontal\n    Flip video horizontally.\n\n-v | --vertical\n    Flip video vertically.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_fps.sh`\n\n#### Description\n\nChange the FPS of a video without changing the length.\n\n![fps](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/fps.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_fps.mp4\n    The name of the output file.\n\n-f | --fps <FPS>\n    The frames per second the video should be converted to. The default value is 30.\n    The length of the video will not change, but frames will either be added or removed.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_grouptime.sh`\n\n#### Description\n\nTrim input videos by a percentage on start and end to get output video to correct duration.\n\n![grouptime](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/grouptime.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is ff_grouptime.mp4\n    The name of the output file.\n\n-d | --duration <DURATION>\n    The final duration of the output file in seconds. Default is 60.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_image.sh`\n\n#### Description\n\nCreate a video from an image\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is ff_image.mp4\n    The name of the output file.\n\n-d | --duration <DURATION>\n    The final duration of the output file in seconds. Default is 60.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n\n### `ff_kenburns.sh`\n\n#### Description\n\nCreate a video from an image with a zoom-pan effect.\n\n#### Flags\n\n```\n -i | --input <INPUT_FILE>\n    The name of the input file or folder\n\n -g | --grep <STRING>\n    The filter to apply to the folder\n\n -t | --target <TARGET>\n    The target of the zoom.\n    TopLeft    | TopRight.\n    BottomLeft | BottomRight.\n    Random\n\n -f | --fps <FPS>\n    Default is 30\n    The Output Frames Per Second.\n\n -w | --width <PIXELS>\n    Default is 1024\n    The output width.\n\n -h | --height <PIXELS>\n    Default is 720\n    The output height.\n\n -d | --duration <SECS>\n    Default is 10\n    The output duration in seconds.\n\n -s | --speed <FLOAT>\n    Default is 0.003\n    The speed of the zoom.\n\n -b | --bitrate <BITRATE>\n    Default is 5000k\n    The bitrate of the output file.\n\n -o | --output <OUTPUT_FILE>\n    Default is ff_kenburns.mp4\n    The name of the output file.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n\n```\n\n---\n\n\n\n### `ff_lut.sh`\n\n#### Description\n\nApply a 3DL/Cube Look-Up Table (LUT) file to a video.\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_lut.mp4\n    The name of the output file.\n\n-t | --lut <LUT_FILE>\n    The Look-Up-Table (LUT) should be in a 3DL/Cube format.\n    there is no default, so must be supplied.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_middle.sh`\n\n#### Description\n\nTrim input video from start and end by a number of seconds.\n\n![middle](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/middle.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_middle.mp4\n    The name of the output file.\n\n-t | --trim <TRIM>\n    Number of seconds to remove from the start and end of video. Default is 1 second. (1)\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_mov_to_mp4.sh`\n\n#### Description\n\nConvert an Apple Quicktime MOV file into an H264 MP4 file. Useful when grouping/appending/concating multiple files.\n\n```mermaid\n\ngraph LR\n\tinput[\"-i input.mov\"]\n\toutput[\"output.mp4\"]\n\n\tinput-->output\n```\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_mov.mp4\n    The name of the output file.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_pad.sh`\n\n#### Description\n\nCreate padding around the edges of the video.\n\n![pad](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/pad.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_pad.mp4\n    The name of the output file.\n\n-w | --width <WIDTH>\n    Width of the output video. Default: Same as input video.\n\n-h | --height <HEIGHT>\n    Height of the output video. Default: 2x input video height.\n\n-x | --xpixels <PIXELS>\n    Where to position the video in the frame on X-Axis from left.\n\n-y | --ypixels <PIXELS>\n    Where to position the video in the frame on Y-Axis from top.\n\n    The width, height, x and y parameters also have access to the following variables:\n    - iw : The input video's width.\n    - ih : The input video's height.\n    - ow : The output video's width.\n    - oh : The output video's height.\n    These can be used to calculate areas of the screen. For example:\n    The center of the screen on x-axis is 'x=(ow-iw)/2\n\n-c | --colour <COLOUR>\n    Colour to use for the padding. See https://ffmpeg.org/ffmpeg-utils.html#color-syntax\n    Can use a word 'Aqua, Beige, Cyan, etc...', the word 'random' or hex code : RRGGBB[AA]\n\n-C | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n#### Examples\n\nPadding all around the video.\n\n    ./ff_pad.sh -i input.mp4 -h 'ih*2' -w 'iw*2'\n\nVideo Pad white background.\n\n    ./ff_pad.sh -i input.mp4 -h 'ih*2' -c white\n\nMake black bars..\n\n    /ff_pad.sh -i input.mp4 -w iw -h ih+100 -y '(oh-ih)/2' -x '(ow-iw)/2' -c #000000\n\n---\n\n### `ff_proxy.sh`\n\nDowngrade large videos to a more manageable file size\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE / INPUT_FOLDER>\n    The name of an input file.\n    If a FOLDER, then it is recursive.\n\n-o | --output <OUTPUT_FILE>\n    Default is %s \"${OUTPUT_FILENAME}\"\n    The name of the output file.\n\n-r | --recursive\n    If a FOLDER, then recurse to deeper folders.\n\n-x | --scalex\n    Width of the output proxy. can use -2 to keep aspect ratio to scaley. Default 1280.\n\n-y | --scaley\n    Height of the output proxy. can use -2 to keep aspect ratio to scalex. Default -2.\n\n-f | --fps\n    Frames Per Second to reduce the proxy down to. Default 30.\n\n-c | --CRF\n    Constant Rate Factor. 0-51. Controls the quality of the output. Default 25.\n\n-d | --codec\n    Codec library to use. libxwebp / libx264 / libx265 /etc... Default libx264.\n\n-g | --grep <STRING>\n    Supply a grep string for filtering the inputs if a folder is specified.\n\n-C | --config <CONFIG_FILE>\n    Supply a config.json file with settings instead of command-line. Requires JQ installed.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_rotate.sh`\n\n#### Description\n\nRotate a video.\n\n![rotate](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/rotate.svg)\n\n#### Flags\n\n```\nUsage: ./ff_rotate.sh FILE [ROTATION] [OUTPUT_FILE]\n\n[rotation]\n0 = 180 Degrees\n1 = 90 Degrees Clockwise\n2 = 90 Degrees Counter Clockwise (default)\n\n[output file]\noutput_rotate.mp4 (default)\n```\n\n---\n\n### `ff_scale.sh`\n\n#### Description\n\nChange the scale (Width/Height) of a video.\n\n![scale](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/scale.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_scale.mp4\n    The name of the output file.\n\n-w | --width <PIXELS>\n    The width of the video. The default value is 1920.\n\n-h | --height <PIXELS>\n    The height of the video. The default value is 1920.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n\n### `ff_sh_runner.sh`\n\n#### Description\n\nWARNING! This is dangerous to have on a machine! Gives access to the shell to run\nany command. If in doubt, remove this script.\n\nThis is only available through the scriptflow runner to enable running commands\nthrough a JSON object.\n\n#### Flags\n\n```\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n```\n\n\n---\n\n### `ff_sharpen.sh`\n\n#### Description\n\nSimple version of unsharp mask.\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_sharpen.mp4\n    The name of the output file.\n\n-p | --pixels <AMOUNT>\n    Both the X and Y matrix horizontal size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-s | --sharpen <AMOUNT>\n    Set the sharpen strength. It must be a floating point number. -2.0 to 5.0. Default value is 1.0.\n    Negative values will blur the input video, while positive values will sharpen it, a value of zero will disable the effect.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n\n### `ff_social_media.sh`\n\n#### Description\n\nConverts the video, ready for various social platforms\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_sharpen.mp4\n    The name of the output file.\n\n-ig | --instagram \n    Convert ready for Instagram.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_stack.sh`\n\n#### Description\n\nStack multiple videos. Either two vertically, two horizontally or four in a 2x2 grid.\n\n![stack](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/stack.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_sharpen.mp4\n    The name of the output file.\n\n-h | --horizontal\n\n-v | --vertical\n\n-g | --grid\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_subtitles.sh`\n\n#### Description\n\nOverlay an audio file on the video using an .SRT file\n\n### Forced Styles:\nMore information : https://aegisub.org/docs/3.2/ASS_Tags/\n\nFontName: Specifies the font name or family for the subtitles.\n`force_style='FontName=Arial'`\n\nFontSize: Sets the font size for the subtitles.\n`force_style='FontSize=24'`\n\nPrimaryColour: Specifies the color of the subtitles' text.\n`force_style='PrimaryColour=&H00FF00' # Green color`\n\nSecondaryColour: Specifies the color of the subtitles' secondary text.\n`force_style='SecondaryColour=&HFFFF00' # Yellow color`\n\nOutlineColour: Specifies the color of the outline of the subtitles' text.\n`force_style='OutlineColour=&H55000000' # Semi-transparent black outline`\n\nBackColour: Specifies the background color behind the subtitles' text.\n`force_style='BackColour=&H55000000' # Semi-transparent black background`\n\nBold: Enables or disables bold text style for the subtitles.\n`force_style='Bold=1' # Enable bold`\n\nItalic: Enables or disables italic text style for the subtitles.\n`force_style='Italic=1' # Enable italic`\n\nUnderline: Enables or disables underline text style for the subtitles.\n`force_style='Underline=1' # Enable underline`\n\nStrikeOut: Enables or disables strikeout text style for the subtitles.\n`force_style='StrikeOut=1' # Enable strikeout`\n\nScaleX: Scales the width of the subtitles' text.\n`force_style='ScaleX=1.5' # Scale width by 1.5`\n\nScaleY: Scales the height of the subtitles' text.\n`force_style='ScaleY=1.5' # Scale height by 1.5`\n\nSpacing: Adjusts the spacing between characters in the subtitles.\n`force_style='Spacing=2' # Increase spacing by 2 pixels`\n\nAngle: Specifies the angle of rotation for the subtitles' text.\n`force_style='Angle=45' # Rotate text by 45 degrees`\n\nBorderStyle: Sets the style of the border around the subtitles' text.\n`force_style='BorderStyle=3' # Drop shadow border style`\n\nOutline: Sets the width of the outline around the subtitles' text.\n`force_style='Outline=2' # Set outline width to 2 pixels`\n\nShadow: Sets the distance and angle of shadow for the subtitles' text.\n`force_style='Shadow=2,2,black' # Shadow offset (2 pixels horizontal, 2 pixels vertical) and color (black)`\n\nAlignment: Specifies the alignment of the subtitles within their bounding box.\n`force_style='Alignment=6' # Middle center alignment`\n\nMarginL: Sets the left margin for the subtitles.\n`force_style='MarginL=10' # Set left margin to 10 pixels`\n\nMarginR: Sets the right margin for the subtitles.\n`force_style='MarginR=10' # Set right margin to 10 pixels`\n\nMarginV: Sets the vertical margin for the subtitles.\n`force_style='MarginV=10' # Set vertical margin to 10 pixels`\n\nAlphaLevel: Sets the transparency level for the subtitles' text.\n`force_style='AlphaLevel=50' # Set transparency to 50%`\n\nEncoding: Specifies the character encoding used for the subtitles.\n`force_style='Encoding=1' # Set character encoding to Unicode (UTF-16LE)`\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-s | --subtitles <INPUT_FILE>\n    The name of an subtitle SRT file.\n\n-f | --styles <FORCE_STYLE>\n    The Forced Style for the subtitles.\n\n-o | --output <OUTPUT_FILE>\n    Default is ff_subtitle.mp4\n    The name of the output file.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_text.sh`\n\n#### Description\n\nAdd text (with background box) on top of the video.\n\n![text](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/text.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_text.mp4\n    The name of the output file.\n\n-t | --text <TEXT>\n    Text to write over video. Default: EXAMPLE.\n\n-f | --font <FONT>\n    Path to font file to use. Default: /System/Library/Fonts/HelveticaNeue.ttc\n\n-c | --color <FONTCOLOUR>\n    The font colour to use. Can be Hex RRGGBB or name and include alpha with '@0.5' after. Default: white.\n\n-s | --size <FONTSIZE>\n    The font size to use. Default: 24.\n\n-b | --box <BOX>\n    Show the background box. Boolean. 1 or 0. Default: 1.\n\n-p | --boxcolour <PAINTCOLOUR>\n    The background paint colour to use. Can be Hex RRGGBB or name and include alpha with '@0.5' after. Default: black.\n\n-r | --boxborder <BOXBORDER>\n    Width of the border on the background box around the text. Default: 5.\n\n-x | --xpixels <PIXELS>\n    Where to position the text in the frame on X-Axis from left. Default center: (w-tw)/2\n\n-y | --ypixels <PIXELS>\n    Where to position the text in the frame on Y-Axis from top. Default center: (h-th)/2\n\n    The x and y parameters also have access to the following variables:\n    - w : The input video's width.\n    - h : The input video's height.\n    - tw : The rendered text width.\n    - th : The rendered text height.\n    - lh : The line height.\n    These can be used to calculate areas of the screen. For example:\n    The center of the screen on x-axis is 'x=(ow-iw)/2\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_thumbnail.sh`\n\n#### Description\n\nCreate thumbnails representative of the video.\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_thumbnail.png\n    The name of the output image file.\n\n-c | --count <COUNT>\n    The number of thumbnails to create. The default value is 1.\n    Uses a batch sample size of 300 frames. If there are less frames than the count, you will get less thumbnails.\n\n-s | --sample <SAMPLE>\n    The batch sample sizee. The default value is 300.\n    Size of the number of frames to analyse to create a thumbnail from. Each thumbnail will use the next batch.\n\n\n-C | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_to_landscape.sh`\n\n#### Description\n\nConvert a portrait video to landscape.\n\n![to_landscape](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/to_landscape.svg)\n\n#### Flags\n\n```\n\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_landscape.mp4\n    The name of the output file.\n\n-r | --rotation <ROTATION>\n    0 = 90CounterCLockwise and Vertical Flip\n    1 = 90Clockwise\n    2 = 90CounterClockwise (default)\n    3 = 90Clockwise and Vertical Flip\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_to_portrait.sh`\n\n#### Description\n\nConvert a landscape video to portrait.\n\n![to_portrait](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/to_portrait.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_portrait.mp4\n    The name of the output file.\n\n-r | --rotation <ROTATION>\n    0 = 90CounterCLockwise and Vertical Flip\n    1 = 90Clockwise (default)\n    2 = 90CounterClockwise\n    3 = 90Clockwise and Vertical Flip\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n\n### `ff_transcode.sh`\n\n#### Description\n\nConvert a file to a common format.\n\n#### Flags\n\n```\n    -o | --output <OUTPUT_FILE>\n        The name of the output file. Specify only one.\n\n    -i | --input <INPUT_FILE>\n        The name of an input file or folder.\n\n    -g | --grep <GREP>\n        Supply a grep string for filtering the inputs if a folder is specified.\n\n    -v | --video <VIDEO_CODEC>\n        The video codec to convert all files to. [default libx264]\n\n    -a | --audio <AUDIO_CODEC>\n        The audio codec to convert all files to. [default aac]\n\n    -f | --fps <FPS>\n        The Frames Per Second to convert all files to. [default 30]\n\n    -s | --sar <SAR>\n        The Sample Aspect Ratio to convert all files to.\n\n    -d | --dar <DAR>\n        The Display Aspect Ratio to convert all files to.\n\n    -w | --width <WIDTH>\n        The width to convert all files to. [default 1920]\n\n    -h | --height <HEIGHT>\n        The height to convert all files to. [default 1080]\n\n    -C | --config <CONFIG_FILE>\n        Supply a config.json file with settings instead of command-line. Requires JQ installed.\n\n    -l | --loglevel <LOGLEVEL>\n        The FFMPEG loglevel to use. Default is 'error' only.\n        Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n\n---\n\n\n### `ff_transition.sh`\n\n#### Description\n\nConcats files together but adds a XFade transition between them. You can use any\nof the effects defined here: https://trac.ffmpeg.org/wiki/Xfade\n\nYou can specify the duration of the effect also.\n\nNote. You must have all files the same type. Use `ff_transcode` for a common format.\n\n#### Flags\n\n```\n    -o | --output <OUTPUT_FILE>\n        The name of the output file. Specify only one.\n\n    -i | --input <INPUT_FILE>\n        The name of an input file or folder.\n\n    -g | --grep <GREP>\n        Supply a grep string for filtering the inputs if a folder is specified.\n\n    -s | --sort <SORT_FLAG>\n        Allow the files to be sorted in different orders.\n\n    -e | --effects <CSV_STRING>\"\n        A csv string of each effect to use. If the effect list is shorter than\"\n        video list, then the effects will be repeated. [default 'fade'] (https://trac.ffmpeg.org/wiki/Xfade)\"\n\n    -d | --duration <STRING>\"\n        How long each transition should take.\"\n\n    -C | --config <CONFIG_FILE>\n        Supply a config.json file with settings instead of command-line. Requires JQ installed.\n\n    -l | --loglevel <LOGLEVEL>\n        The FFMPEG loglevel to use. Default is 'error' only.\n        Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_unsharp.sh`\n\n#### Description\n\nUses an unsharp mask to alter the luma,chroma and alpha of a video.\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_unsharp.mp4\n    The name of the output file.\n\n-lx | --luma_x <SIZE>\n    Set the luma matrix horizontal size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-ly | --luma_y <SIZE>\n    Set the luma matrix vertical size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-la | --luma_amount <AMOUNT>\n    Set the luma effect strength. It must be a floating point number. -2.0 to 5.0. Default value is 1.0.\n    Negative values will blur the input video, while positive values will sharpen it, a value of zero will disable the effect.\n\n-cx | --chroma_x <SIZE>\n    Set the chroma matrix horizontal size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-cy | --chroma_y <SIZE>\n    Set the chroma matrix vertical size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-ca | --chroma_amount <AMOUNT>\n    Set the chroma effect strength. It must be a floating point number. Default value is 0.0.\n    Negative values will blur the input video, while positive values will sharpen it, a value of zero will disable the effect.\n\n-ax | --alpha_x <SIZE>\n    Set the alpha matrix horizontal size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-ay | --alpha_y <SIZE>\n    Set the alpha matrix vertical size. It must be an odd integer between 3 and 23. The default value is 5.\n\n-aa | --alpha_amount <AMOUNT>\n    Set the alpha effect strength. It must be a floating point number. Default value is 0.0.\n    Negative values will blur the input video, while positive values will sharpen it, a value of zero will disable the effect.\n\n    All parameters are optional and default to the equivalent of the string '5:5:1.0:5:5:0.0'.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n---\n\n### `ff_watermark.sh`\n\n#### Description\n\nOverlay a watermark on the video.\n\n![watermark](https://raw.githubusercontent.com/IORoot/ffmpeg__bash-scripts/master/lib/images/watermark.svg)\n\n#### Flags\n\n```\n-i | --input <INPUT_FILE>\n    The name of an input file.\n\n-o | --output <OUTPUT_FILE>\n    Default is output_watermarked.mp4\n    The name of the output file.\n\n-w | --watermark <WATERMARK_FILE>\n    Note that you CAN use videos as the watermark.\n    Image to use for the watermark.\n\n-x | --xpixels <PIXELS>\n    Position of the watermark. Number of pixels on X-Axis. Default 10.\n    There are variables that also can be used:\n    - (W) is the width of the video\n    - (H) is the height of the video\n    - (w) is the width of the watermark\n    - (h) is the height of the watermark\n    The following example will center the watermark:\n    ff_watermark -i input.mp4 -w watermark.png -x \"(W-w)/2\" -y \"(H-h)/2\"\n\n-y | --ypixels <PIXELS>\n    Position of the watermark. Number of pixels on Y-Axis. Default 10.\n\n-s | --scale <SCALE>\n    Size of the watermark in relation to the height of the video. Default is 0.2 (1/5th height)\n\n-a | --alpha <ALPHA>\n    Transparency (alpha channel) of the watermark. From 0 to 1. Default is 1.\n\n-c | --config <CONFIG_FILE>\n    The name of an input config file.\n\n-l | --loglevel <LOGLEVEL>\n    The FFMPEG loglevel to use. Default is 'error' only.\n    Options: quiet,panic,fatal,error,warning,info,verbose,debug,trace\n```\n\n#### Examples\n\nCenter large watermark:\n\n       ff_watermark -i input.mp4 -w watermark.png -s 0.4 -x \"(W-w)/2\" -y \"(H-h)/2\"\n\nSmall bottom right watermark:\n\n       ff_watermark -i input.mp4 -w watermark.png -s 0.1 -x \"(W-w)\" -y \"(H-h)\"\n\nFull-size watermark:\n\n       ff_watermark -i input.mp4 -w watermark.png -s 1\n\nFull-size semi-transparent watermark:\n\n       ff_watermark -i input.mp4 -w watermark.png -s 1 -a 0.5\n\nSmall, transparent bottom-right positioned Video as a watermark:\n\n       ff_watermark -i input.mp4 -w watermark_video.mp4 -s 0.3 -x \"(W-w)\" -y \"(H-h)\" -a 0.5\n\n---\n\n## 4. ScriptFlow\n\nThe `scriptflow.sh` script takes a single argument - a config.json file that describes all steps to take.\n\nThis configuration JSON file will built up of a chain of scripts you wish to run. Each key has the name of the script, like `ff_lut` and then an object with each key and value.\n\nFor example, to run the `ff_lut` script followed by the `ff_thumbnail` script, you can use the following file:\n\n```json\n{\n\t\"ff_lut\": {\n\t\t\"input\": \"movie.mp4\",\n\t\t\"lut\": \"Lundmark.cube\"\n\t},\n\n\t\"ff_thumbnail\": {\n\t\t\"input\": \"ff_lut.mp4\",\n\t\t\"count\": \"2\"\n\t}\n}\n```\n\nDefaults will be used for any flag not specified. Every script has a default `output` of it's own script name. This is why the `ff_thumbnail` script can take in the `ff_lut.mp4` file.\n\n### 4.1 Blank flags\n\nIf you need to use a flag without a value, simple use an empty string.\n\n```json\n{\n\t\"ff_flip\": {\n\t\t\"input\": \"movie.mp4\",\n\t\t\"horizontal\": \"\"\n\t}\n}\n```\n\n### 4.2 nulls\n\n`null` values can also be used to just act as a reminder of what keys are available. Any key with a `null` value will be stripped out when run and the default value of the script will be used.\n\n```json\n{\n\t\"ff_flip\": {\n\t\t\"input\": null,\n\t\t\"horizontal\": null,\n\t\t\"vertical\": null,\n\t\t\"output\": null,\n\t\t\"loglevel\": null\n\t}\n}\n```\n\n> Note : The github action requires `schedule` and `category`. These are not needed other than for my pipelines.\n\n### 4.3 Multiple duplicate scripts\n\nIf you have multiple stages with the same name, like `ff_scale`, Then use a counter digit as a suffix. So, `ff_scale1` and `ff_scale2`...\n\n```json\n{\n\t\"ff_proxy1\": {\n\t\t\"input\": \"video1.mp4\",\n\t\t\"output\": \"proxy1.mp4\"\n\t},\n\n\t\"ff_proxy2\": {\n\t\t\"input\": \"videoB.mp4\",\n\t\t\"output\": \"proxy2.mp4\"\n\t}\n}\n```\n\n### 4.4 Scripts with multiple inputs\n\nInputs can be `input1`, `input2`, etc... for scripts that require multiple inputs (like `ff_concat.sh`)\n\n```json\n{\n\t\"ff_concat\": {\n\t\t\"input1\": \"video1.mp4\",\n\t\t\"input2\": \"videoB.mp4\",\n\t\t\"input3\": \"charlie.mp4\"\n\t}\n}\n```\n\n### 4.5 Keyword Replacements\n\n#### <ENV\\_\\*>\n\nYou can use the `<ENV_VARIABLENAME>` keyword variable to replace with the any environment variable.\nSet an environment variable by:\n\n```bash\nexport MYVARIABLE=\"Helloo there\"\n```\n\nand then including the tag `<ENV_MYVARIABLE>` into the code.\n\n```json\n{\n\t\"ff_text\": {\n\t\t\"input\": \"input.mp4\",\n\t\t\"text\": \"Test of variable - <ENV_MYVARIABLE>\",\n\t\t\"size\": \"36\",\n\t\t\"reduction\": \"10\",\n\t\t\"xpixels\": \"(w-tw)/2\",\n\t\t\"ypixels\": \"(h-th)-100\",\n\t\t\"colour\": \"#FFFFFF\",\n\t\t\"boxcolour\": \"#262626\"\n\t}\n}\n```\n\nYou can also prepend the variable to the front of the script so you don't need to set it as an environment variable:\n\n```bash\nMYVARIABLE=\"Helloo there\" ./scriptflow.sh\n```\n\n---\n\n#### <FOLDER_NAME>\n\nYou can use the `<FOLDER_NAME>` keyword variable to replace with the ACTUAL name of the folder the config file is located.\n\n```json\n{\n\t\"ff_to_landscape\": {\n\t\t\"input\": \"<FOLDER_NAME>\"\n\t}\n}\n```\n\nThis will translate to something equivalent to:\n\n```json\n{\n\t\"ff_to_landscape\": {\n\t\t\"input\": \"/Users/me/myfolder/\"\n\t}\n}\n```\n\n---\n\n#### <FOLDER_TITLE>\n\nThe `<FOLDER_TITLE>` is very similar to the `<FOLDER_NAME>` except it replaces underscores for spaces.\nThis is useful for adding text relevant to the folder.\nFor example:\n\n```json\n{\n\t\"ff_text\": {\n\t\t\"input\": \"/tmp/Youth_Classes/video.mp4\",\n\t\t\"text\": \"Every Sunday!\\n<FOLDER_TITLE>!\"\n\t}\n}\n```\n\nwill translate to:\n\n```json\n{\n\t\"ff_text\": {\n\t\t\"input\": \"/tmp/Youth_Classes/video.mp4\",\n\t\t\"text\": \"Every Sunday!\\nYouth Classes!\"\n\t}\n}\n```\n\n---\n\n#### <DATE_format>\n\nThe `<DATE_format>` keyword, as the word implies, allows you to add the current date as per the bash formatting. (see https://man7.org/linux/man-pages/man1/date.1.html)\n\n```json\n{\n\t\"ff_text\": {\n\t\t\"input\": \"video.mp4\",\n\t\t\"text\": \"Video created on\\n<DATE_%A %d %B. %Y>\"\n\t}\n}\n```\n\nBecomes:\n\n```json\n{\n\t\"ff_text\": {\n\t\t\"input\": \"video.mp4\",\n\t\t\"text\": \"Video created on\\nFriday 31 March. 2023\"\n\t}\n}\n```\n\n---\n\n#### <RANDOM_VIDEO>\n\nIf you wish to pick a random video from a folder, you can use this `<RANDOM_VIDEO>` variable.\n\n```json\n{\n\t\"ff_pad\": {\n\t\t\"input\": \"/Videos/<RANDOM_VIDEO>\",\n\t\t\"width\": \"800\",\n\t\t\"height\": \"800\"\n\t}\n}\n```\n\nThis will search all `*.mov` and `*.mp4` videos in that folder and randomise the output.\n\n---\n\n#### <RANDOM_VIDEO_FILTER_string>\n\nFor a little more control over the randomised selection of videos, the `<RANDOM_VIDEO_FILTER_string>` keyword allows you to supply a string that must be contained in the video name.\nSay you have the following videos:\n\n```bash\n/videos/video01.mp4\n/videos/landscape_holiday.mp4\n/videos/sea_holiday.mp4\n/videos/sportsday.mp4\n/videos/presentation.mp4\n```\n\nIf you wanted a random selection from only the `holiday` videos, you can supply the following config:\n\n```json\n{\n\t\"ff_sharpen\": {\n\t\t\"input\": \"/Videos/<RANDOM_VIDEO_FILTER_holiday>\",\n\t\t\"strength\": \"3.2\"\n\t}\n}\n```\n\nThis will randomly pick ONLY a holiday video and sharpen it.\n\n---\n\n#### <RANDOM_COLOUR>\n\nThis uses the tailwind CSS palette for a nicer curated list of colours to use. See https://tailwindcss.com/docs/customizing-colors\n\nThis keyword will just randomly pick a new colour from the tailwind array and replace it with the hex code.\n\n```json\n{\n\t\"ff_text\": {\n\t\t\"input\": \"video.mp4\",\n\t\t\"text\": \"Hello!\",\n\t\t\"colour\": \"<RANDOM_COLOUR>\"\n\t}\n}\n```\n\nThis will become:\n\n```json\n{\n\t\"ff_text\": {\n\t\t\"input\": \"video.mp4\",\n\t\t\"text\": \"Hello!\",\n\t\t\"colour\": \"#c2410c\"\n\t}\n}\n```\n\nNote that a key point to remember is that subsequent stages of the JSON file will be also be random values and will keep changing.\n\n---\n\n#### <RANDOM_CONTRAST_COLOUR>\n\nThis is based on the `<RANDOM_COLOUR>` tag and will determine if the generated value is 'light' or 'dark'. It will then set this `<RANDOM_CONTRAST_COLOUR>` tag to be a contrasting white or black colour.\nFor instance, if the `<RANDOM_COLOUR>` is #365314 (a dark green) then the `<RANDOM_CONTRAST_COLOUR>` will be set to white to contrast it. This is useful for text over background colours.\n\n```json\n    \"ff_text\": {\n        \"input\": \"input.mp4\",\n        \"text\": \"The background is random, the foreground is contrasting.\",\n        \"colour\": \"<RANDOM_CONTRAST_COLOUR>\",\n        \"boxcolour\": \"<RANDOM_COLOUR>\"\n    },\n```\n\nThis will change to:\n\n```json\n    \"ff_text\": {\n        \"input\": \"input.mp4\",\n        \"text\": \"The background is random, the foreground is white or black.\",\n        \"colour\": \"#fafafa\",\n        \"boxcolour\": \"#365314\"\n    },\n```\n\n---\n\n#### <CONSTANT_RANDOM_COLOUR>\n\nOne issue is that the `<RANDOM_COLOUR>` and `<RANDOM_CONTRAST_COLOUR>` tags will keep changing across each JSON step. It can therefore be tricky to reuse and match colours across multiple steps. This is where the `<CONSTANT_RANDOM_COLOUR>` comes in.\n\nThis will be randomised once at the beginning of the script run and then never changed. This way, the same colour can be reused.\n\nThe below example adds a pad around a landscape video to make it the same height as it's width. Then text is overlayed on the padding area.\n\n```json\n    \"ff_pad\": {\n        \"input\": \"input.mp4\",\n        \"height\": \"iw\",\n        \"colour\": \"<CONSTANT_RANDOM_COLOUR>\"\n    },\n\n    \"ff_text1\": {\n        \"input\": \"ff_pad.mp4\",\n        \"text\": \"Top test\",\n        \"colour\": \"<RANDOM_COLOUR>\",\n        \"boxcolour\": \"<CONSTANT_RANDOM_COLOUR>\",\n        \"ypixels\": \"70\"\n    },\n```\n\nHere, both steps will now have the same colour for the padding and the text box background (#a5f3fc), with the text being a random different colour.\n\n```json\n    \"ff_pad\": {\n        \"input\": \"input.mp4\",\n        \"height\": \"iw\",\n        \"colour\": \"#a5f3fc\"\n    },\n\n    \"ff_text1\": {\n        \"input\": \"ff_pad.mp4\",\n        \"text\": \"Top test\",\n        \"colour\": \"#2e1065\",\n        \"boxcolour\": \"#a5f3fc\",\n        \"ypixels\": \"70\"\n    },\n```\n\n---\n\n#### <CONSTANT_CONTRAST_COLOUR>\n\nThis tag will contrast the `<CONSTANT_RANDOM_COLOUR>` colour and will only be randomised once on the start of the script flow. Therefore maintaining a constant light or dark colour until the script is finished.\nUseful for maintaining across multiple JSON steps.\n\n```json\n    \"ff_text1\": {\n       \"input\": \"input.mp4\",\n       \"output\": \"ff_text1.mp4\",\n       \"text\": \"First Line\",\n       \"colour\": \"<CONSTANT_CONTRAST_COLOUR>\",\n       \"boxcolour\": \"<CONSTANT_RANDOM_COLOUR>\",\n       \"ypixels\": \"70\"\n    },\n\n    \"ff_text1\": {\n       \"input\": \"ff_text1.mp4\",\n       \"output\": \"ff_text2.mp4\",\n       \"text\": \"Second Line\",\n       \"colour\": \"<CONSTANT_CONTRAST_COLOUR>\",\n       \"boxcolour\": \"<CONSTANT_RANDOM_COLOUR>\",\n       \"ypixels\": \"120\"\n    },\n\n```\n\nThe substituted scripts will now have the same colours across each step. Here you have a dark red text box background (#83184) and white contrasting text (#ffffff)\n\n```json\n    \"ff_text1\": {\n       \"input\": \"input.mp4\",\n       \"output\": \"ff_text1.mp4\",\n       \"text\": \"First Line\",\n       \"colour\": \"#ffffff\",\n       \"boxcolour\": \"#83184\",\n       \"ypixels\": \"70\"\n    },\n\n    \"ff_text1\": {\n       \"input\": \"ff_text1.mp4\",\n       \"output\": \"ff_text2.mp4\",\n       \"text\": \"Second Line\",\n       \"colour\": \"#ffffff\",\n       \"boxcolour\": \"#83184\",\n       \"ypixels\": \"120\"\n    },\n\n```\n\n### 4.5. Output & Cleanup\n\nOnce the `scriptflow` has finished, it will output to a file called `output.mp4` and all other `ff_?????.mp4` intermediate movie files will be removed.\n\n### 4.6 pwd and file references\n\nWhen `scriptflow` runs, it will move into the folder that the `config.json` file sits in. All file references should be relative to the `config.json` file.\nThe script will finish by move back to when you first were in the filesystem.\n\n### 4.7 descriptions\n\nYou can now add a `description` field into your JSON for each step. This is ignored by all scripts and allows you to keep track of what each step is doing.\n\n```json\n    \"ff_text1\": {\n       \"description\": \"Add some text 70px from the top, middle (default) of the frame\",\n       \"input\": \"input.mp4\",\n       \"output\": \"ff_text1.mp4\",\n       \"text\": \"First Line\",\n       \"colour\": \"#ffffff\",\n       \"boxcolour\": \"#83184\",\n       \"ypixels\": \"70\"\n    },\n\n    \"ff_text1\": {\n       \"description\": \"Then add a second line 120px from the top, middles of the frame\",\n       \"input\": \"ff_text1.mp4\",\n       \"output\": \"ff_text2.mp4\",\n       \"text\": \"Second Line\",\n       \"colour\": \"#ffffff\",\n       \"boxcolour\": \"#83184\",\n       \"ypixels\": \"120\"\n    },\n\n```\n\n---\n\n## 5. Customising\n\nFork and use Pull Requests.\n\n---\n\n## 6. Troubleshooting\n\n### Output Files.\n\nDo not start the name of the output file ff*.mp4 because the cleanup script will delete it.\n\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n---\n\n## 7. Contributing\n\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue.\nDon't forget to give the project a star! Thanks again!\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n---\n\n## 8. License\n\nDistributed under the MIT License.\n\nMIT License\n\nCopyright (c) 2022 Andy Pearson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n---\n\n## 9. Contact\n\nAuthor Link: [https://github.com/IORoot](https://github.com/IORoot)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n---\n\n## 10. Changelog\n\n### Version 1.10\n\n- Added ff_subtitles.sh to add embed subtitles to video\n- Added ff_kenburns.sh to convert images to video with zoom-pan effect\n- Added ff_transcode.sh to bulk convert videos to common format and specs.\n\n### Version 1.9\n\n- Renamed to Video_FFMPEG-Scriptflow to be housed under the video umbrella.\n\n### Version 1.8\n\n- ff_concat can now reformat files first.\n- added ff_transcode.sh to format files into a common format.\n- ff_audio can remove audio from video.\n- ff_transition added. You can use XFade effects to concat files together.\n- ff_transition test added.\n\n### Version 1.7\n\n- Upgraded output messages\n- fixed ff_flip\n- Added tests for all scripts\n\n### Version 1.6\n\n-   Added 'description' fields\n-   Updated configs\n-   Better log outputs and spacing\n\n### Version 1.5\n\n-   Added ff_download.sh\n-   removed templates for configs and scriptflow.sh\n\n### Version 1.4\n\n-   Keywords for Random tailwind colours.\n\n### Version 1.3\n\n-   Folder handling in many scripts.\n-   Keywords in JSON\n\n### Version 1.2\n\n-   Added scriptflow. Run any script with a JSON config file.\n\n### Version 1.1\n\n-   Added config-file abilities. Used by templates.\n\n### Version 1.0\n\n-   Initial\n",
  "readme_html": "https://github.com/IORoot/Video_FFMPEG-Scriptflow/blob/master/README.md",
  "last_cached": "2025-07-29T16:32:52.132Z"
}