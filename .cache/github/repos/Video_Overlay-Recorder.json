{
  "id": 814728702,
  "node_id": "R_kgDOMI_F_g",
  "name": "Video_Overlay-Recorder",
  "full_name": "IORoot/Video_Overlay-Recorder",
  "private": false,
  "owner": {
    "login": "IORoot",
    "id": 8770616,
    "node_id": "MDQ6VXNlcjg3NzA2MTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8770616?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IORoot",
    "html_url": "https://github.com/IORoot",
    "followers_url": "https://api.github.com/users/IORoot/followers",
    "following_url": "https://api.github.com/users/IORoot/following{/other_user}",
    "gists_url": "https://api.github.com/users/IORoot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IORoot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IORoot/subscriptions",
    "organizations_url": "https://api.github.com/users/IORoot/orgs",
    "repos_url": "https://api.github.com/users/IORoot/repos",
    "events_url": "https://api.github.com/users/IORoot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IORoot/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "html_url": "https://github.com/IORoot/Video_Overlay-Recorder",
  "description": "Generate transparent videos from webpages",
  "fork": false,
  "url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder",
  "forks_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/forks",
  "keys_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/teams",
  "hooks_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/hooks",
  "issue_events_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/issues/events{/number}",
  "events_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/events",
  "assignees_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/assignees{/user}",
  "branches_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/branches{/branch}",
  "tags_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/tags",
  "blobs_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/languages",
  "stargazers_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/stargazers",
  "contributors_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/contributors",
  "subscribers_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/subscribers",
  "subscription_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/subscription",
  "commits_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/issues/comments{/number}",
  "contents_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/contents/{+path}",
  "compare_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/merges",
  "archive_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/downloads",
  "issues_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/issues{/number}",
  "pulls_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/labels{/name}",
  "releases_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/releases{/id}",
  "deployments_url": "https://api.github.com/repos/IORoot/Video_Overlay-Recorder/deployments",
  "created_at": "2024-06-13T15:25:21Z",
  "updated_at": "2025-07-23T15:13:59Z",
  "pushed_at": "2025-07-23T15:13:55Z",
  "git_url": "git://github.com/IORoot/Video_Overlay-Recorder.git",
  "ssh_url": "git@github.com:IORoot/Video_Overlay-Recorder.git",
  "clone_url": "https://github.com/IORoot/Video_Overlay-Recorder.git",
  "svn_url": "https://github.com/IORoot/Video_Overlay-Recorder",
  "homepage": "",
  "size": 5056,
  "stargazers_count": 0,
  "watchers_count": 0,
  "language": null,
  "has_issues": true,
  "has_projects": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": false,
  "has_discussions": false,
  "forks_count": 0,
  "mirror_url": null,
  "archived": false,
  "disabled": false,
  "open_issues_count": 0,
  "license": null,
  "allow_forking": true,
  "is_template": false,
  "web_commit_signoff_required": false,
  "topics": [
    "github-action",
    "php",
    "timecut"
  ],
  "visibility": "public",
  "forks": 0,
  "open_issues": 0,
  "watchers": 0,
  "default_branch": "master",
  "permissions": {
    "admin": true,
    "maintain": true,
    "push": true,
    "triage": true,
    "pull": true
  },
  "readme_content": "![header](https://raw.githubusercontent.com/IORoot/Video_Overlay-Recorder/refs/heads/master/header.jpg)\n\n# Overlay Recorder\n\nRecords a webpage to transparent PNG files which create a MOV Movie with alpha transparency in it.\n\nThe way I use this is to create animated slideshows using wordpress and Slider Revolution plugin. That plugin allows you to export as an HTML file independent of wordpress so you can run a simple HTML server that displays the slider. \n\nI use a PHP server to host the slider and then initiate the `timecut` project that utilises `puppeteer` to record the screen. You can specify many settings including length of clip, fps, etc... \n\n[Slider Revolution](https://www.sliderrevolution.com/) is very powerful and allows you to easily create amazing animation that can be used to generate overlays for videos instead of web graphics.\n\nAs an addition, I have created a built-in function into the exported slider that enables you to supply a `inputs.json` file with overrides to the innerText and Style of any element on the page. This enables customisation without having to use Revolution Slider to re-render and export the changes. This way you can dynamically change the slider on the fly.\n\nThe output file can then be layered over a video for awesome effects.\n\n## Timecut on a remote URL\n\n```bash\nalias timecut=\"node cli.js\"\n\ntimecut http://localhost:8000/index.html  -S \"svg\" --transparent-background --viewport=\"1080,1920\" --fps=30 --duration=3 --output-options=\"-c:v png\" --pix-fmt=rgba --output=overlay_video.mov\n```\n\nor\n\n## Timecut on a local file\n\n```bash\nalias timecut=\"node cli.js\"\n\ntimecut index.html -S \"svg\" --transparent-background --viewport=\"1080,1920\" --fps=30 --duration=3 --output-options=\"-c:v png\" --pix-fmt=rgba --output=overlay_video.mov`\n```\n\n\n## Running on runner\n\nLaunch arguments are needed.\n\n```bash\ntimecut \"http://localhost:8080\"  -S \"sr7-module\" --transparent-background --viewport=\"1080,1920\" --fps=30 --duration=3 --output-options=\"-c:v png\" --pix-fmt=rgba --output=overlay_video.mov --launch-arguments=\"--no-sandbox --disable-setuid-sandbox --allow-file-access-from-files\"\n```\n\n\n## The Slider Revolution \n\nSlider Revolution Plugin in Wordpress is used to create the templates. You can create the animation with a transparent background and then export as HTML to a zip file. This allows you to run a simple PHP server (without wordpress) to run as a standalone HTML file. The slider has the embedded script (see below) to allow dynamic changing of the animation via a json file.\n\n\n### Change via JSON files\nThe slides have the following function added so that you can control the innerText or Style via a JSON file called `inputs.json`\n\n```js\nfunction fetchFile(url1, url2) {\n    return new Promise((resolve, reject) => {\n        // Attempt to fetch from the first URL\n        fetch(url1)\n            .then(response => {\n                if (response.ok) {\n                    resolve(response);\n                } else {\n                    // If fetch from the first URL fails, attempt the second URL\n                    fetch(url2)\n                        .then(response => {\n                            if (response.ok) {\n                                resolve(response);\n                            } else {\n                                reject(new Error('File not found in both locations'));\n                            }\n                        })\n                        .catch(error => reject(error));\n                }\n            })\n            .catch(() => {\n                // If fetch from the first URL fails, attempt the second URL\n                fetch(url2)\n                    .then(response => {\n                        if (response.ok) {\n                            resolve(response);\n                        } else {\n                            reject(new Error('File not found in both locations'));\n                        }\n                    })\n                    .catch(error => reject(error));\n            });\n    });\n}\n\n// Check both of the locations for file\nvar url1 = './inputs.json';\nvar url2 = './wp-content/themes/slider/inputs.json';\n\nfetchFile(url1, url2)\n    .then(response => response.json())\n    .then(data => {\n        console.log(data);\n        \n        // Generate CSS rules with !important based on JSON data\n        let cssRules = '';\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                if (typeof data[key] === 'object' && data[key].hasOwnProperty('style')) {\n                    const styleObj = data[key].style;\n                    cssRules += `#${key} {`;\n                    for (const styleKey in styleObj) {\n                        if (styleObj.hasOwnProperty(styleKey)) {\n                            cssRules += `${styleKey}: ${styleObj[styleKey]} !important; `;\n                        }\n                    }\n                    cssRules += `}\\n`;\n                }\n            }\n        }\n\n        // Create <style> element and append to <head>\n        const styleElement = document.createElement('style');\n        styleElement.textContent = cssRules;\n        document.head.appendChild(styleElement);\n        \n        // Continue with updating innerText if needed\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                const elementById = document.getElementById(key);\n                if (elementById) {\n                    if (typeof data[key] === 'object' && data[key].hasOwnProperty('innerText')) {\n                        elementById.innerText = data[key].innerText;\n                    }\n                }\n            }\n        }\n    })\n    .catch(error => console.error('Error fetching or parsing JSON:', error));\n\n```\n\n\n",
  "readme_html": "https://github.com/IORoot/Video_Overlay-Recorder/blob/master/readme.md",
  "last_cached": "2025-07-29T16:32:52.132Z"
}