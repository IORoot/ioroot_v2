{
  "id": 512401176,
  "node_id": "R_kgDOHoqfGA",
  "name": "docker__puppeteer--facebook",
  "full_name": "IORoot/docker__puppeteer--facebook",
  "private": false,
  "owner": {
    "login": "IORoot",
    "id": 8770616,
    "node_id": "MDQ6VXNlcjg3NzA2MTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8770616?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IORoot",
    "html_url": "https://github.com/IORoot",
    "followers_url": "https://api.github.com/users/IORoot/followers",
    "following_url": "https://api.github.com/users/IORoot/following{/other_user}",
    "gists_url": "https://api.github.com/users/IORoot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IORoot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IORoot/subscriptions",
    "organizations_url": "https://api.github.com/users/IORoot/orgs",
    "repos_url": "https://api.github.com/users/IORoot/repos",
    "events_url": "https://api.github.com/users/IORoot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IORoot/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "html_url": "https://github.com/IORoot/docker__puppeteer--facebook",
  "description": "A container that runs puppeteer to login into facebook creator studio and schedule a video post to Instagram and Facebook.",
  "fork": false,
  "url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook",
  "forks_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/forks",
  "keys_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/teams",
  "hooks_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/hooks",
  "issue_events_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/issues/events{/number}",
  "events_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/events",
  "assignees_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/assignees{/user}",
  "branches_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/branches{/branch}",
  "tags_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/tags",
  "blobs_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/languages",
  "stargazers_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/stargazers",
  "contributors_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/contributors",
  "subscribers_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/subscribers",
  "subscription_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/subscription",
  "commits_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/issues/comments{/number}",
  "contents_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/contents/{+path}",
  "compare_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/merges",
  "archive_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/downloads",
  "issues_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/issues{/number}",
  "pulls_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/labels{/name}",
  "releases_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/releases{/id}",
  "deployments_url": "https://api.github.com/repos/IORoot/docker__puppeteer--facebook/deployments",
  "created_at": "2022-07-10T10:04:50Z",
  "updated_at": "2025-07-21T16:12:37Z",
  "pushed_at": "2022-07-10T10:35:10Z",
  "git_url": "git://github.com/IORoot/docker__puppeteer--facebook.git",
  "ssh_url": "git@github.com:IORoot/docker__puppeteer--facebook.git",
  "clone_url": "https://github.com/IORoot/docker__puppeteer--facebook.git",
  "svn_url": "https://github.com/IORoot/docker__puppeteer--facebook",
  "homepage": "",
  "size": 31,
  "stargazers_count": 2,
  "watchers_count": 2,
  "language": "JavaScript",
  "has_issues": true,
  "has_projects": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": false,
  "has_discussions": false,
  "forks_count": 1,
  "mirror_url": null,
  "archived": true,
  "disabled": false,
  "open_issues_count": 0,
  "license": null,
  "allow_forking": true,
  "is_template": false,
  "web_commit_signoff_required": false,
  "topics": [],
  "visibility": "public",
  "forks": 1,
  "open_issues": 0,
  "watchers": 2,
  "default_branch": "master",
  "permissions": {
    "admin": true,
    "maintain": true,
    "push": true,
    "triage": true,
    "pull": true
  },
  "readme_content": "<div id=\"top\"></div>\n\n<div align=\"center\">\n\n<img src=\"https://svg-rewriter.sachinraja.workers.dev/?url=https%3A%2F%2Fcdn.jsdelivr.net%2Fnpm%2F%40mdi%2Fsvg%406.7.96%2Fsvg%2Fdocker.svg&fill=%2315803D&width=200px&height=200px\" style=\"width:200px;\"/>\n\n<h3 align=\"center\">Javascript / Puppeteer Instagram Scheduler</h3>\n\n<p align=\"center\">\n    A container that runs puppeteer to login into facebook creator studio and schedule a video post to Instagram and Facebook.\n</p>    \n</div>\n\n##  1. <a name='TableofContents'></a>Table of Contents\n\n\n\n* 1. [Table of Contents](#TableofContents)\n* 2. [IMPORTANT](#IMPORTANT)\n* 3. [About The Project](#AboutTheProject)\n\t* 3.1. [Built With](#BuiltWith)\n\t* 3.2. [Requirements](#Requirements)\n\t* 3.3. [Installation](#Installation)\n\t* 3.4. [Authentication](#Authentication)\n* 4. [Puppeteer Script `creator_studio.js`](#PuppeteerScriptcreator_studio.js)\n\t* 4.1. [Inputs and setting Defaults.](#InputsandsettingDefaults.)\n\t* 4.2. [Custom logger](#Customlogger)\n\t* 4.3. [Setters](#Setters)\n\t* 4.4. [run](#run)\n\t* 4.5. [Public Methods](#PublicMethods)\n\t* 4.6. [Test Usage of `creator_studio.js`](#TestUsageofcreator_studio.js)\n* 5. [Command-Line Interface `cli.js`](#Command-LineInterfacecli.js)\n\t* 5.1. [Usage](#Usage)\n\t\t* 5.1.1. [`/`](#)\n* 6. [Video Downloader. `video_download.js`](#VideoDownloader.video_download.js)\n* 7. [Video Downloader CLI `cli_vd.js`](#VideoDownloaderCLIcli_vd.js)\n* 8. [Web Server `server.js`](#WebServerserver.js)\n\t* 8.1. [Open Folders](#OpenFolders)\n\t\t* 8.1.1. [`/logs`](#logs)\n\t\t* 8.1.2. [`/videos`](#videos)\n\t\t* 8.1.3. [`/images`](#images)\n\t\t* 8.1.4. [`/screenshots`](#screenshots)\n\t* 8.2. [Routes](#Routes)\n\t\t* 8.2.1. [`POST` to `/`](#POSTto)\n\t\t* 8.2.2. [`POST` to `/vd`](#POSTtovd)\n\t\t* 8.2.3. [`POST` to `/clearcookies`](#POSTtoclearcookies)\n\t\t* 8.2.4. [GET to `/clearlog`](#GETtoclearlog)\n\t\t* 8.2.5. [GET to `/status`](#GETtostatus)\n* 9. [Docker](#Docker)\n* 10. [Customising](#Customising)\n* 11. [Troubleshooting](#Troubleshooting)\n\t* 11.1. [Intricacies and XPATH Problems.](#IntricaciesandXPATHProblems.)\n\t* 11.2. [Troubleshooting puppeteer script](#Troubleshootingpuppeteerscript)\n* 12. [Contributing](#Contributing)\n* 13. [License](#License)\n* 14. [Contact](#Contact)\n* 15. [Changelog](#Changelog)\n\n\n\n##  2. <a name='IMPORTANT'></a>IMPORTANT\n\nIMPORTANT - This puppeteer script will not run without a version of chromium that\nhas NOT been compiled with the video/audio codecs. Chrome comes with them as standard\nbut Chromium does not.\n\nYou can download a copy of Chromium with those codecs here:\nhttps://chromium.woolyss.com/ to query these routes.\n\nYou can then set the `executablePath` of puppeteer-core in the puppeteer settings\nto point to this version of chromium.\n\nWarning - If you do not do this, then chromium will not upload any videos to the\ncreator studio because it will not recognise those file formats. Images will work,\nhowever.\n\n\n##  3. <a name='AboutTheProject'></a>About The Project\n\n\nThis puppeteer script will automatically open up a new page, visit (or login) to \nfacebook creator studio and create a new post with all of your supplied details.\n\nThis is a bare-bones example to make it as understandable as possible. It's meant\nfor readability and help to understand the process.\n\nIt comes with a few components, that do separate things. The main parts are:\n\n1. `creator_studio.js` is a node script that does the main work. This runs the \npuppeteer scripts to do the automation.\n\n1. `cli.js` is the command-line interface to the `creator_studio.js`. It allows you\nto run the scripts from the command prompt.\n\n1. `manual_run.js` is for running the `creator_studio.js` with a load of settings\nalready made. Note that it will need changing the `executablePath` to your own path \nas a minimum.\n\n1. `video_download.js` is a node script that will allow you to download a file to the\nlocal filesystem. This is needed so that you can download a video/image to then upload \nit to the creator studio.\n\n1. `cli_vd.js` is a command-line interface to the `video_download.js` script.\n\n1. `server.js` is an HTTP REST server to the same `creator_studio.js` script, allowing\nyou to run the script remotely.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n###  3.1. <a name='BuiltWith'></a>Built With\n\nThis project was built with the following frameworks, technologies and software.\n\n* [Dockerhub](https://hub.docker.com/)\n* [Express.js](https://expressjs.com/)\n\n###  3.2. <a name='Requirements'></a>Requirements\n\n- Instagram 'business' account\n- Facebook 'creator studio' account.\n- Instagram account connected to the creator studio account.\n- Puppeteer-Core (without chromium installed - we do that manually)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n###  3.3. <a name='Installation'></a>Installation\n\n\n1. Clone the repo.\n    ```bash\n    git clone git@github.com:IORoot/docker__puppeteer--facebook.git\n    ```\n2. Run NPM\n    ```bash\n    npm install\n    ```\n\n###  3.4. <a name='Authentication'></a>Authentication\n\nBefore you can run the script you will need to create an `./auth.json` file in the following structure\n\n```json\n[\n    {\n        \"apikey\": \"randomAPIKEYstringTOuseFORauthenticatingYOURSELF\",\n        \"user\": \"my_creator_studio_email@gmail.com\",\n        \"pass\": \"my_creator_studio_password\"\n    }\n]\n```\nIf this is not set, then the puppeteer scripts will not be able to login and run.\n\nThe API KEY is used to authenticate yourself with the REST `server.js` file.\n\n\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n##  4. <a name='PuppeteerScriptcreator_studio.js'></a>Puppeteer Script `creator_studio.js`\n\nThis is the main puppeteer script that does the automated steps.\nThe script is broken into the following parts:\n\n###  4.1. <a name='InputsandsettingDefaults.'></a>Inputs and setting Defaults.\n\nAt the top of the script you have all of thee loading in required libraries, global variables,\ndefault puppeteer_settings, default post settings, constants and XPATH locations.\n\n###  4.2. <a name='Customlogger'></a>Custom logger\n\nThe logger allows us to write to a file and prefix each line with a date/time. Logs are stored in `./logs/debug.log`\n\n###  4.3. <a name='Setters'></a>Setters\n\nThese are the methods that change (set) all of the variables declared above. Thesee variables\ncontrol the behaviour of the script.\n\n- `publicSetUsername()` sets the username or email address the script will use to log into the \ncreator studio with.\n\n- `publicSetPassword()` sets the password for the account the script will log into.\n\n- `publicSetCookieFile()` tells the script to write all cookies to this filename set. Use just a filename, like `cookies.json` \n\n\n- `publicSetPuppeteerSettings()` allows you to override the default puppeteer settings. This allows you to do things like turning 'headless' on/off, devtools on/off, give a new chrome path, etc... e.g.\n```js\n{ \n    headless: false, \n    devtools: false,\n    executablePath: \"/Users/me/Chromium.app/Contents/MacOS/Chromium\",\n    args: ['--no-sandbox']\n}\n```\n\n- `publicSetScreenshots()` turns on the screenshot function. This means that each step of the puppeteer script will take an image. This is helpful for debugging purposes and status updates.\n\n- `publicSetNOOP()` will turn on the NO OPeration functionality. Essentially, this will do every step as normal, however it will NOT submit everything at the end, within the creator_studio. THis is good for testing and making sure that all steps are working.\n\n\n###  4.4. <a name='run'></a>run\n\nThis is the main bulk of the script. Each step is broken up with a comment specifying what it will do. Use a debugger and the `manual_run.js` script (with headless off), to follow each step.\n\nEach step will use the `selector` constant to reference the correct XPATH it should look for to perform it's task. For instance, the `publish_button` may change over time, so we can update the `selector` constant to look in a new XPATH location when that happens.\n\n\n###  4.5. <a name='PublicMethods'></a>Public Methods\n\nAt the bottom of the script is a list of the public methods available to the CLI and the HTTP REST Server to access the Setter methods.\n\n\n\n###  4.6. <a name='TestUsageofcreator_studio.js'></a>Test Usage of `creator_studio.js`\n\nSee the contents of the `manual_run.js` file to see a working version of running the script manually.\n\n\n\n##  5. <a name='Command-LineInterfacecli.js'></a>Command-Line Interface `cli.js`\n\nThis is the command-line interface to the puppeteer script.\n\n###  5.1. <a name='Usage'></a>Usage\n\nYou can run the command through the command line (without installing), like this:\n\nRun the help file with:\n\n```bash\n❯ node ./cli.js --help\nUsage: -u <user> -p <pass> -c <cookiefile> -v <videofile>\n\nOptions:\n  --help             Show help                                         [boolean]\n  --version          Show version number                               [boolean]\n  -u, --user         Your facebook username/email            [string] [required]\n  -p, --pass         Your facebook password                  [string] [required]\n  -f, --cookiefile   Location of cookie file                 [string] [required]\n  -v, --video        Instagram Video FilePath                [string] [required]\n  -c, --caption      Instagram Caption Text                             [string]\n  -i, --image        Instagram Video Cover FilePath                     [string]\n  -l, --location     Instagram Location                                 [string]\n  -d, --date         Instagram Schedule Date DD/MM/YYYY                 [string]\n  -t, --time         Instagram Schedule Time HH:MM                      [string]\n  -x, --crosspost    Post to Facebook Page too                          [string]\n  -s, --screenshots  Screenshot every step\n  -n, --noop         NO OPeration. Used to test script works\n```\n\n\nInstall the commandline tool with: (while in the directory)\n```bash\nnpm install -g .\n```\n\nUninstall with:\n```bash\nnpm uninstall -g ig-scheduler\n```\n\nRun an installed version with `cs` (which is the name of the command)\n```bash\ncs -u me@gmail.com  to query these routes.\n```\n\n\n####  5.1.1. <a name=''></a>`/` \n\nThis is the main route. It will execute the puppeteer script.\n\n```bash\nnode . -u me@gmail.com  -p PASSWORD -f /Users/me/cookies.json -v ./output.mov -c \"Crosspost\" -d 05/11/2020 -t 02:00 -x yes\n```\n\nYou can track progress throught the debug log at `./logs/debug.log`\n\n\n##  6. <a name='VideoDownloader.video_download.js'></a>Video Downloader. `video_download.js`\n\nThis has one public method, `download()` which takes two parameters, `url` and `filePath`. The `cli_vd.js` script should be used to run this method. Point it to the URL of a video to download for use.\n\n\n##  7. <a name='VideoDownloaderCLIcli_vd.js'></a>Video Downloader CLI `cli_vd.js`\n\nThis is a simpler script that acts as a command-line interface to the `video_download.js` script.\n\nYou can see usage here:\n\n```bash\n❯ node ./cli_vd.js --help\nUsage: -u <url> -f <file>\n\nOptions:\n  --help      Show help                                                [boolean]\n  --version   Show version number                                      [boolean]\n  -u, --url   The video URL to download                      [string] [required]\n  -f, --file  Your target filename                           [string] [required]\n```\n\n\n##  8. <a name='WebServerserver.js'></a>Web Server `server.js`\n\nSo this is an HTTP REST web interface that uses `express.js`. Since this is all meant to run within a docker container, the `HOST` is `0.0.0.0` and `PORT` is `8080`. It requires docker to connect to those ports to its external one.\n\n###  8.1. <a name='OpenFolders'></a>Open Folders\n\nThere are four folders open that are used to allow you to access the contents. This uses the `serve-index` library to show the contents of the folder via a browser. visit the paths to see the contents.\n\n####  8.1.1. <a name='logs'></a>`/logs`\n\nThis contains the `debug.log` file.\n\n####  8.1.2. <a name='videos'></a>`/videos`\n\nThis contains the video files downloaded with the `video_download.js` script. Use this to check the video has downloaded.\n\n####  8.1.3. <a name='images'></a>`/images`\n\nThis contains the coverart files downloaded with the `video_download.js` script. Use to make sure the image file has downloaded.\n\n####  8.1.4. <a name='screenshots'></a>`/screenshots`\n\nContains the last round of screenshots taken by the script if the `screenshot` parameter has been switched on.\n\n\n###  8.2. <a name='Routes'></a>Routes\n\nThe following routes are available. Use something like `postman.com` to query these routes.\n\n- POST to `/`\n- POST to `/vd`\n- POST to `/clearcookies`\n- GET to `/clearlog`\n- GET to `/status`\n\n####  8.2.1. <a name='POSTto'></a>`POST` to `/` \n\nA `POST` request to the root of the domain will execute the main puppeteer script. \n\nRequires the following PARAMETERS:\n\n- `apikey=APIKEYSETINAUTHJSONFILE123` \n\nRequires the following HEADERS:\n\n- `CONTENT-TYPE = application/json`\n\nRequires the following RAW JSON BODY:\n\n```json\n{\n    \"user\":      \"me@gmail.com\", \n    \"pass\":      \"mypassword\",\n    \"cookies\":   \"cookies.json\",\n    \"video\":     \"output.mp4\",\n    \"cover\":     \"cover.jpg\",\n    \"date\":      \"09/11/2022\",\n    \"time\":      \"12:30\",\n    \"location\":  \"New York\",\n    \"caption\":   \"Testing from postman\",\n    \"crosspost\": \"on\",\n    \"screenshots\": \"on\",\n    \"noop\":       false\n}\n```\n\n\n####  8.2.2. <a name='POSTtovd'></a>`POST` to `/vd`\n\nThis will instigate the video_download.js script.\n\nRequires the following PARAMETERS:\n\n- `apikey=APIKEYSETINAUTHJSONFILE123` \n\nRequires the following HEADERS:\n\n- `CONTENT-TYPE = application/json`\n\nRequires the following RAW JSON BODY:\n\n```json\n{\n    \"url\": \"https://domain.com/wp-content/uploads/2020/10/video.mp4\", \n    \"file\": \"./videos/output.mp4\"\n}\n```\n\n\n####  8.2.3. <a name='POSTtoclearcookies'></a>`POST` to `/clearcookies`\n\nThis will delete the cookie file so the puppeteer script will need to log in again.\n\nRequires the following PARAMETERS:\n\n- `apikey=APIKEYSETINAUTHJSONFILE123` \n\nRequires the following HEADERS:\n\n- `CONTENT-TYPE = application/json`\n\nRequires the following RAW JSON BODY:\n\n```json\n{\n    \"cookies\":   \"cookies.json\"\n}\n```\n\n####  8.2.4. <a name='GETtoclearlog'></a>GET to `/clearlog`\n\nThis will truncate the `debug.log` file.\n\nRequires the following PARAMETERS:\n\n- `apikey=APIKEYSETINAUTHJSONFILE123` \n\n\n####  8.2.5. <a name='GETtostatus'></a>GET to `/status`\n\nThis will get the last known status of the script. It will be one of the following states:\n\n- success\n- running\n- error\n\nUse this for alerting or metrics.\n\nRequires the following PARAMETERS:\n\n- `apikey=APIKEYSETINAUTHJSONFILE123` \n\n\n##  9. <a name='Docker'></a>Docker\n\nThis script is also dockerised and contains the dockerfile I use to setup my installation on DigitalOcean.\n\n\n\n##  10. <a name='Customising'></a>Customising\n\nChange the `creator_studio.js` file  however you feel appropriate. Facebook updates the interface often, so you'll no doubt have to customise.\n\n##  11. <a name='Troubleshooting'></a>Troubleshooting\n\n###  11.1. <a name='IntricaciesandXPATHProblems.'></a>Intricacies and XPATH Problems.\n\nInstagram will obfuscate and randomise all of the classnames on the creator studio page. \nThis will make it difficult to target the correct part of the page. All of the current\nselectors and XPaths are in the `selector` object within the `creator_studio.js` file.\n\n\n###  11.2. <a name='Troubleshootingpuppeteerscript'></a>Troubleshooting puppeteer script\n\nIf the puppeteer script isn't working, then it's probably because facebook have changed their interface.\n\nRun the puppeteer locally in \"HEAD\" mode and with DevTools to change the puppeteer script to match the  current interface.\n\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n##  12. <a name='Contributing'></a>Contributing\n\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue.\nDon't forget to give the project a star! Thanks again!\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n##  13. <a name='License'></a>License\n\nDistributed under the MIT License.\n\nMIT License\n\nCopyright (c) 2022 Andy Pearson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n##  14. <a name='Contact'></a>Contact\n\nAuthor Link: [https://github.com/IORoot](https://github.com/IORoot)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n##  15. <a name='Changelog'></a>Changelog\n\n- v1.1.0 - Updated for public use (removed all personal creds)\n\n- v1.0.0 - Initial Commit\n",
  "readme_html": "https://github.com/IORoot/docker__puppeteer--facebook/blob/master/README.md",
  "last_cached": "2025-07-29T16:32:52.133Z"
}