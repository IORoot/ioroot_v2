{
  "id": 279528077,
  "node_id": "MDEwOlJlcG9zaXRvcnkyNzk1MjgwNzc=",
  "name": "scraper__instamancer",
  "full_name": "IORoot/scraper__instamancer",
  "private": false,
  "owner": {
    "login": "IORoot",
    "id": 8770616,
    "node_id": "MDQ6VXNlcjg3NzA2MTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8770616?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IORoot",
    "html_url": "https://github.com/IORoot",
    "followers_url": "https://api.github.com/users/IORoot/followers",
    "following_url": "https://api.github.com/users/IORoot/following{/other_user}",
    "gists_url": "https://api.github.com/users/IORoot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IORoot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IORoot/subscriptions",
    "organizations_url": "https://api.github.com/users/IORoot/orgs",
    "repos_url": "https://api.github.com/users/IORoot/repos",
    "events_url": "https://api.github.com/users/IORoot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IORoot/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "html_url": "https://github.com/IORoot/scraper__instamancer",
  "description": "Scrape Instagram's API with Puppeteer",
  "fork": true,
  "url": "https://api.github.com/repos/IORoot/scraper__instamancer",
  "forks_url": "https://api.github.com/repos/IORoot/scraper__instamancer/forks",
  "keys_url": "https://api.github.com/repos/IORoot/scraper__instamancer/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/IORoot/scraper__instamancer/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/IORoot/scraper__instamancer/teams",
  "hooks_url": "https://api.github.com/repos/IORoot/scraper__instamancer/hooks",
  "issue_events_url": "https://api.github.com/repos/IORoot/scraper__instamancer/issues/events{/number}",
  "events_url": "https://api.github.com/repos/IORoot/scraper__instamancer/events",
  "assignees_url": "https://api.github.com/repos/IORoot/scraper__instamancer/assignees{/user}",
  "branches_url": "https://api.github.com/repos/IORoot/scraper__instamancer/branches{/branch}",
  "tags_url": "https://api.github.com/repos/IORoot/scraper__instamancer/tags",
  "blobs_url": "https://api.github.com/repos/IORoot/scraper__instamancer/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/IORoot/scraper__instamancer/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/IORoot/scraper__instamancer/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/IORoot/scraper__instamancer/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/IORoot/scraper__instamancer/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/IORoot/scraper__instamancer/languages",
  "stargazers_url": "https://api.github.com/repos/IORoot/scraper__instamancer/stargazers",
  "contributors_url": "https://api.github.com/repos/IORoot/scraper__instamancer/contributors",
  "subscribers_url": "https://api.github.com/repos/IORoot/scraper__instamancer/subscribers",
  "subscription_url": "https://api.github.com/repos/IORoot/scraper__instamancer/subscription",
  "commits_url": "https://api.github.com/repos/IORoot/scraper__instamancer/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/IORoot/scraper__instamancer/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/IORoot/scraper__instamancer/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/IORoot/scraper__instamancer/issues/comments{/number}",
  "contents_url": "https://api.github.com/repos/IORoot/scraper__instamancer/contents/{+path}",
  "compare_url": "https://api.github.com/repos/IORoot/scraper__instamancer/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/IORoot/scraper__instamancer/merges",
  "archive_url": "https://api.github.com/repos/IORoot/scraper__instamancer/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/IORoot/scraper__instamancer/downloads",
  "issues_url": "https://api.github.com/repos/IORoot/scraper__instamancer/issues{/number}",
  "pulls_url": "https://api.github.com/repos/IORoot/scraper__instamancer/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/IORoot/scraper__instamancer/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/IORoot/scraper__instamancer/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/IORoot/scraper__instamancer/labels{/name}",
  "releases_url": "https://api.github.com/repos/IORoot/scraper__instamancer/releases{/id}",
  "deployments_url": "https://api.github.com/repos/IORoot/scraper__instamancer/deployments",
  "created_at": "2020-07-14T08:30:48Z",
  "updated_at": "2024-06-09T06:28:41Z",
  "pushed_at": "2022-07-07T08:04:14Z",
  "git_url": "git://github.com/IORoot/scraper__instamancer.git",
  "ssh_url": "git@github.com:IORoot/scraper__instamancer.git",
  "clone_url": "https://github.com/IORoot/scraper__instamancer.git",
  "svn_url": "https://github.com/IORoot/scraper__instamancer",
  "homepage": "http://adamsm.com/instamancer",
  "size": 5718,
  "stargazers_count": 6,
  "watchers_count": 6,
  "language": "TypeScript",
  "has_issues": true,
  "has_projects": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": false,
  "has_discussions": false,
  "forks_count": 0,
  "mirror_url": null,
  "archived": true,
  "disabled": false,
  "open_issues_count": 1,
  "license": {
    "key": "mit",
    "name": "MIT License",
    "spdx_id": "MIT",
    "url": "https://api.github.com/licenses/mit",
    "node_id": "MDc6TGljZW5zZTEz"
  },
  "allow_forking": true,
  "is_template": false,
  "web_commit_signoff_required": false,
  "topics": [],
  "visibility": "public",
  "forks": 0,
  "open_issues": 1,
  "watchers": 6,
  "default_branch": "master",
  "permissions": {
    "admin": true,
    "maintain": true,
    "push": true,
    "triage": true,
    "pull": true
  },
  "readme_content": "\n<div id=\"top\"></div>\n\n<div align=\"center\">\n\n<img src=\"https://svg-rewriter.sachinraja.workers.dev/?url=https%3A%2F%2Fcdn.jsdelivr.net%2Fnpm%2F%40mdi%2Fsvg%406.7.96%2Fsvg%2Finstagram.svg&fill=%23E4405F&width=200px&height=200px\" style=\"width:200px;\"/>\n\n<h3 align=\"center\">Instagram Scraper built upon Instamancer.</h3>\n\n<p align=\"center\">\nThis project is a fork of Instamancer that adds login dectection, single browser and multiple user functionality.\n</p>    \n</div>\n\n<p align=\"center\">\n<img src=\"assets/logo.png\" height=\"150\" title=\"Icon made by Freepik (www.freepik.com) available at www.flaticon.com. CC 3.0 BY licensed (http://creativecommons.org/licenses/by/3.0/)\"/>\n</p>\n\n<h1 align=\"center\">Instamancer+</h1>\n\nScrape Instagram's API with Puppeteer. Now with login detection.\n\n###### [Install](#Install) | [Usage](#Usage) | [Comparison](#Comparison) | [Website](https://scriptsmith.github.io/instamancer/) | [FAQ](FAQ.md) | [Examples](examples/README.md)\n\n\nInstamancer is a new type of scraping tool that leverages Puppeteer's ability to intercept requests made by a webpage to an API.\n\nRead more about how Instamancer works [here](https://scriptsmith.github.io/instamancer/).\n\n### Features+\n- Login detection\n- Single browser instance option.\n- Scrape multiple users.\n\n### Features\n- Scrape hashtags, users' posts, and individual posts\n- Download images, albums, and videos\n- Output JSON, CSV\n- Batch scraping\n- Search hashtags, users, and locations\n- API response validation\n- Upload files to [S3](https://github.com/ScriptSmith/instamancer/blob/master/FAQ.md#how-do-i-use-the---bucket-flag-and-s3) and [depot](https://github.com/ScriptSmith/instamancer/blob/master/FAQ.md#how-do-i-use-the---depot-flag-and-depot)\n- [Plugins](plugins)\n\n### Data\nMetadata that Instamancer is able to gather from posts:\n\n- Text\n- Timestamps\n- Tagged users\n- Accessibility captions\n- Like counts\n- Comment counts\n- Images (Thumbnails, Dimensions, URLs)\n- Videos (URL, View count, Duration)\n- Comments (Timestamp, Text, Like count, User)\n- User (Username, Full name, Profile picture, Profile privacy)\n- Location (Name, Street, Zip code, City, Region, Country)\n- Sponsored status\n- Gating information\n- Fact checking information\n\n## Install\n\n#### Linux\nEnable user namespace cloning:\n```\nsysctl -w kernel.unprivileged_userns_clone=1\n```\n\nOr run without a sandbox:\n\n```\n# WARNING: unsafe\nexport NO_SANDBOX=true\n```\n\nSee [Puppeteer troubleshooting](https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#chrome-headless-fails-due-to-sandbox-issues)\n\n#### Without downloading chromium\nIf you wish to install Instamancer without downloading chromium, enable the `PUPPETEER_SKIP_CHROMIUM_DOWNLOAD` environment variable before installation\n\n```\nexport PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\n```\n\n### From NPM\n\n```\nnpm install -g instamancer\n```\n\nIf you're using root to install globally, use the following command to install the Puppeteer dependency\n\n```\nsudo npm install -g instamancer --unsafe-perm=true\n```\n\n### From NPX\n\n```\nnpx instamancer\n```\n\n### From this repository\n```\ngit clone https://github.com/ScriptSmith/instamancer.git\ncd instamancer\nnpm install\nnpm run build\nnpm install -g\n```\n\n### /src/api/creds.json\n\nIf a login screen is detected, then use the creds.json file to login as that user and carry on.\nCopy the `creds_demo.json` to `creds.json` and enter real details to be used.\n\n## Usage\n\n### Command Line\n```\n$ instamancer\nUsage: instamancer <command> [options]\n\nCommands:\n  instamancer hashtag [id]       Scrape a hashtag\n  instamancer user [id]          Scrape a users posts\n  instamancer users [ids]        Scrape a comma-separated list of users posts\n  instamancer post [ids]         Scrape a comma-separated list of posts\n  instamancer search [query]     Perform a search of users, tags and places\n  instamancer batch [batchfile]  Read newline-separated arguments from a file\n\nConfiguration\n  --count, -c    Number of posts to download (0 for all)   [number] [default: 0]\n  --full, -f     Retrieve full post data              [boolean] [default: false]\n  --sleep, -s    Seconds to sleep between interactions     [number] [default: 2]\n  --graft, -g    Enable grafting                       [boolean] [default: true]\n  --browser, -b  Browser path. Defaults to the puppeteer version        [string]\n  --sameBrowser  Use a single browser when grafting   [boolean] [default: false]\n\nDownload\n  --download, -d      Save images from posts          [boolean] [default: false]\n  --downdir           Download path       [default: \"downloads/[endpoint]/[id]\"]\n  --video, -v         Download videos (requires full) [boolean] [default: false]\n  --sync              Force download between requests [boolean] [default: false]\n  --threads, -k       Parallel download / depot threads    [number] [default: 4]\n  --waitDownload, -w  Download media after scraping   [boolean] [default: false]\n\nUpload\n  --bucket  Upload files to an AWS S3 bucket                            [string]\n  --depot   Upload files to a URL with a PUT request (depot)            [string]\n\nOutput\n  --file, -o       Output filename. '-' for stdout    [string] [default: \"[id]\"]\n  --type, -t       Filetype   [choices: \"csv\", \"json\", \"both\"] [default: \"json\"]\n  --mediaPath, -m  Add filepaths to _mediaPath        [boolean] [default: false]\n\nDisplay\n  --visible    Show browser on the screen             [boolean] [default: false]\n  --quiet, -q  Disable progress output                [boolean] [default: false]\n\nLogging\n  --logging, -l    [choices: \"none\", \"error\", \"info\", \"debug\"] [default: \"none\"]\n  --logfile      Log file name             [string] [default: \"instamancer.log\"]\n\nValidation\n  --strict  Throw an error on response type mismatch  [boolean] [default: false]\n\nPlugins\n  --plugin, -p  Use a plugin from the plugins directory    [array] [default: []]\n\nOptions:\n  --help     Show help                                                 [boolean]\n  --version  Show version number                                       [boolean]\n\nExamples:\n  instamancer hashtag instagood -fvd        Download all the available posts,\n                                            and their media from #instagood\n  instamancer user arianagrande --type=csv  Download Ariana Grande's posts to a\n  --logging=info --visible                  CSV file with a non-headless\n                                            browser, and log all events\n  instamancer users arianagrande,therock    Download Ariana Grande's and the\n  -c 3                                      Rock's latest three posts.\nSource code available at https://github.com/IORoot/instamancer\n\n```\n\n### Module\n\nES2018 Typescript example:\n```typescript\nimport {createApi, IOptions} from \"instamancer\"\n\nconst options: IOptions = {\n    total: 10\n};\nconst hashtag = createApi(\"hashtag\", \"beach\", options);\n\n(async () => {\n    for await (const post of hashtag.generator()) {\n        console.log(post);\n    }\n})();\n```\n\n#### Generator functions\n\n```typescript\nimport {createApi} from \"instamancer\"\n\ncreateApi(\"hashtag\", id, options);\ncreateApi(\"user\", id, options);\ncreateApi(\"users\", ids, options);\ncreateApi(\"post\", ids, options);\ncreateApi(\"search\", query, options);\n```\n\n#### Options\n```typescript\nconst options: Instamancer.IOptions = {\n    // Total posts to download. 0 for unlimited\n    total: number,\n\n    // Run Chrome in headless mode\n    headless: boolean,\n\n    // Logging events\n    logger: winston.Logger,\n\n    // Run without output to stdout\n    silent: boolean,\n\n    // Time to sleep between interactions with the page\n    sleepTime: number,\n\n    // Throw an error if type validation has been failed\n    strict: boolean,\n\n    // Time to sleep when rate-limited\n    hibernationTime: number,\n\n    // Enable the grafting process\n    enableGrafting: boolean,\n\n    // Extract the full amount of information from the API\n    fullAPI: boolean,\n\n    // Use a proxy in Chrome to connect to Instagram\n    proxyURL: string,\n\n    // Location of the chromium / chrome binary executable\n    executablePath: string,\n\n    // Custom io-ts validator\n    validator: Type<unknown>,\n\n    // Custom plugins\n    plugins: IPlugin[]\n}\n```\n",
  "readme_html": "https://github.com/IORoot/scraper__instamancer/blob/master/README.md",
  "last_cached": "2025-07-29T16:32:52.133Z"
}