{
  "id": 250973644,
  "node_id": "MDEwOlJlcG9zaXRvcnkyNTA5NzM2NDQ=",
  "name": "wp-plugin__pipeline--generative-images",
  "full_name": "IORoot/wp-plugin__pipeline--generative-images",
  "private": false,
  "owner": {
    "login": "IORoot",
    "id": 8770616,
    "node_id": "MDQ6VXNlcjg3NzA2MTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8770616?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/IORoot",
    "html_url": "https://github.com/IORoot",
    "followers_url": "https://api.github.com/users/IORoot/followers",
    "following_url": "https://api.github.com/users/IORoot/following{/other_user}",
    "gists_url": "https://api.github.com/users/IORoot/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/IORoot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IORoot/subscriptions",
    "organizations_url": "https://api.github.com/users/IORoot/orgs",
    "repos_url": "https://api.github.com/users/IORoot/repos",
    "events_url": "https://api.github.com/users/IORoot/events{/privacy}",
    "received_events_url": "https://api.github.com/users/IORoot/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "html_url": "https://github.com/IORoot/wp-plugin__pipeline--generative-images",
  "description": "Generate SVG images based on featured images.",
  "fork": false,
  "url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images",
  "forks_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/forks",
  "keys_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/keys{/key_id}",
  "collaborators_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/collaborators{/collaborator}",
  "teams_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/teams",
  "hooks_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/hooks",
  "issue_events_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/issues/events{/number}",
  "events_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/events",
  "assignees_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/assignees{/user}",
  "branches_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/branches{/branch}",
  "tags_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/tags",
  "blobs_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/git/blobs{/sha}",
  "git_tags_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/git/tags{/sha}",
  "git_refs_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/git/refs{/sha}",
  "trees_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/git/trees{/sha}",
  "statuses_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/statuses/{sha}",
  "languages_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/languages",
  "stargazers_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/stargazers",
  "contributors_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/contributors",
  "subscribers_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/subscribers",
  "subscription_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/subscription",
  "commits_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/commits{/sha}",
  "git_commits_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/git/commits{/sha}",
  "comments_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/comments{/number}",
  "issue_comment_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/issues/comments{/number}",
  "contents_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/contents/{+path}",
  "compare_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/compare/{base}...{head}",
  "merges_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/merges",
  "archive_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/{archive_format}{/ref}",
  "downloads_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/downloads",
  "issues_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/issues{/number}",
  "pulls_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/pulls{/number}",
  "milestones_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/milestones{/number}",
  "notifications_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/notifications{?since,all,participating}",
  "labels_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/labels{/name}",
  "releases_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/releases{/id}",
  "deployments_url": "https://api.github.com/repos/IORoot/wp-plugin__pipeline--generative-images/deployments",
  "created_at": "2020-03-29T07:03:50Z",
  "updated_at": "2025-07-22T09:51:35Z",
  "pushed_at": "2022-07-11T15:50:55Z",
  "git_url": "git://github.com/IORoot/wp-plugin__pipeline--generative-images.git",
  "ssh_url": "git@github.com:IORoot/wp-plugin__pipeline--generative-images.git",
  "clone_url": "https://github.com/IORoot/wp-plugin__pipeline--generative-images.git",
  "svn_url": "https://github.com/IORoot/wp-plugin__pipeline--generative-images",
  "homepage": "",
  "size": 1028,
  "stargazers_count": 2,
  "watchers_count": 2,
  "language": "PHP",
  "has_issues": true,
  "has_projects": true,
  "has_downloads": true,
  "has_wiki": true,
  "has_pages": false,
  "has_discussions": false,
  "forks_count": 0,
  "mirror_url": null,
  "archived": false,
  "disabled": false,
  "open_issues_count": 0,
  "license": null,
  "allow_forking": true,
  "is_template": false,
  "web_commit_signoff_required": false,
  "topics": [
    "automation",
    "generative-art",
    "wordpress-plugin"
  ],
  "visibility": "public",
  "forks": 0,
  "open_issues": 0,
  "watchers": 2,
  "default_branch": "master",
  "permissions": {
    "admin": true,
    "maintain": true,
    "push": true,
    "triage": true,
    "pull": true
  },
  "readme_content": "\n<div id=\"top\"></div>\n\n<div align=\"center\">\n\n<img src=\"https://svg-rewriter.sachinraja.workers.dev/?url=https%3A%2F%2Fcdn.jsdelivr.net%2Fnpm%2F%40mdi%2Fsvg%406.7.96%2Fsvg%2Fimage-filter-vintage.svg&fill=%23A855F7&width=200px&height=200px\" style=\"width:200px;\"/>\n\n<h3 align=\"center\">Pipeline : Generative Images</h3>\n\n<p align=\"center\">\nCreate and generate SVG images using the featured image as a base. Part of the Pipeline project.\n</p>    \n</div>\n\n##  1. <a name='TableofContents'></a>Table of Contents\n\n\n* 1. [Table of Contents](#TableofContents)\n* 2. [The Pipeline Project](#ThePipelineProject)\n* 3. [About The Project](#AboutTheProject)\n\t* 3.1. [Built With](#BuiltWith)\n\t* 3.2. [Installation](#Installation)\n* 4. [Usage](#Usage)\n\t* 4.1. [The query](#Thequery)\n\t* 4.2. [Save options](#Saveoptions)\n\t* 4.3. [The shortcode](#Theshortcode)\n\t* 4.4. [Building up your SVG](#BuildingupyourSVG)\n* 5. [The filters](#Thefilters)\n\t* 5.1. [none](#none)\n\t* 5.2. [image](#image)\n\t* 5.3. [image_free](#image_free)\n\t* 5.4. [svg_element](#svg_element)\n\t* 5.5. [svg_definition](#svg_definition)\n\t* 5.6. [noise](#noise)\n\t* 5.7. [darken](#darken)\n\t* 5.8. [whiten](#whiten)\n\t* 5.9. [random_colour](#random_colour)\n\t* 5.10. [text](#text)\n\t\t* 5.10.1. [Example](#Example)\n\t* 5.11. [acf_post_tax_field](#acf_post_tax_field)\n\t* 5.12. [acf_term_field](#acf_term_field)\n\t* 5.13. [acf_term_field_defintion](#acf_term_field_defintion)\n\t* 5.14. [generate_shape](#generate_shape)\n\t\t* 5.14.1. [palette](#palette)\n\t\t* 5.14.2. [additional_palette](#additional_palette)\n\t\t* 5.14.3. [additional_colours](#additional_colours)\n\t\t* 5.14.4. [opacity](#opacity)\n\t\t* 5.14.5. [corners](#corners)\n\t\t* 5.14.6. [corner_size](#corner_size)\n\t\t* 5.14.7. [shapes](#shapes)\n\t\t* 5.14.8. [cell_size](#cell_size)\n\t\t* 5.14.9. [Example](#Example-1)\n* 6. [ Customising](#Customising)\n* 7. [Troubleshooting](#Troubleshooting)\n* 8. [Contributing](#Contributing)\n* 9. [License](#License)\n* 10. [Contact](#Contact)\n* 11. [Changelog](#Changelog)\n\n\n\n##  2. <a name='ThePipelineProject'></a>The Pipeline Project\n\nThe pipeline project was one where I wanted to be able to do the following:\n\n1. Query YouTube / Instagram for specific videos and download the results (video file, post content, meta, etc).\n1. Automatically create some cover art.\n1. Combine the videos to create a quick trailer.\n1. Export the results to my social media.\n\nThis then became the components of the pipeline project:\n\n1. [API Scraper](https://github.com/IORoot/wp-plugin__pipeline--api-scraper)\n1. [Generative Images](https://github.com/IORoot/wp-plugin__pipeline--generative-images)\n1. [The Processor](https://github.com/IORoot/wp-plugin__pipeline--processor)\n1. [Exporter](https://github.com/IORoot/wp-plugin__pipeline--exporter)\n\n\n##  3. <a name='AboutTheProject'></a>About The Project\n\nThis is highly cowboy-coded plugin I created to enable me to manipulate all of my post images. The premise was to be able to automatically alter ALL posts/CPT/Taxonomy featured images in some way to give them a more consistent tone and feel. This plugin does that through SVGs and conversion. Note that I have 'articles' CPT with 'articlecategory' and 'articletags' as taxonomy and terms. The code may have references to these. Like I said, this was a personal project... Will need refactoring.\n\nAt a broad sense it does the following:\n\n1. You define what you want your 'filter' to do. Basically, how you want to build your SVG up with layers.\n2. You can then write a WP-_Query to apply this filter to.\n3. Specify the output you want - SVG, JPG, PNG.\n4. And whether you want to change the original post to have this new image.\n5. Run.\n\n\nWP_Query --> Posts --> Run filter --> Build SVG with featured image of post --> Convert to JPG/SVG/PNG --> Write back to post.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n###  3.1. <a name='BuiltWith'></a>Built With\n\nThis project was built with the following frameworks, technologies and software.\n\n* [ACF](https://www.advancedcustomfields.com/pro/)\n* [Inkscape](https://inkscape.org/)\n* [Imagemagick](https://imagemagick.org/index.php)\n* [PHP](https://php.net/)\n* [Wordpress](https://Wordpress.org/)\n\n\n- Inkscape - Converts SVG --> PNG\n- PHP with Imagemagick (Imagick) - Converts PNG --> JPG\n\nAt time of writing, this is what I'm using : \n\n- WP 5.4, \n- ACF Pro 5.8.7, \n- Inkscape 0.92.4, \n- PHP 7.3.9, \n- imagick module 3.4.4.\n\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n###  3.2. <a name='Installation'></a>Installation\n\n1. Clone the repo into your wordpress plugin folder\n    ```bash\n    git clone https://github.com/IORoot/wp-plugin__pipeline--generative-images ./wp-content/plugins/pipeline-generative-images\n    ```\n1. Activate the plugin.\n\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n##  4. <a name='Usage'></a>Usage\n\n\n###  4.1. <a name='Thequery'></a>The query\n\nYou have an option of:\n\n1. Single Post / CPT\n2. Single Taxonomy\n3. WP_Query\n\nThese can be changed using ACF depending on your use case.\n\n###  4.2. <a name='Saveoptions'></a>Save options\n\nOnce the SVG is built up, you can opt to do:\n\n1. Save to SVG file\n2. Save to PNG file\n3. Save to JPG file\n\nWARNING - You ALSO have the write back to post option. Which allows you to write the JPG back to the post.\nBe aware that if this setting is kept on, it'll recursively apply the filter over the top every time.\n\n###  4.3. <a name='Theshortcode'></a>The shortcode\n\nThere is a shortcode `[andyp_gen_image]` which will allow you to put the results on a page. You execute the whole process by visiting the shortcode page.\n\n###  4.4. <a name='BuildingupyourSVG'></a>Building up your SVG\n\nThe SVG data is built up with layers that you define. The order of the layers matter because it's how the output will be rendered.\nThere are two slightly different filter lists for the posts and the taxonomy because of the query that is run and the options you can pull back.\n\n##  5. <a name='Thefilters'></a>The filters\n\n###  5.1. <a name='none'></a>none\n\nThis filter does nothing. It allows you to 'switch off' a layer without deleting it. Handy for testing your output.\n\n###  5.2. <a name='image'></a>image\n\nThis will create an `<image>` tag with the image of the source post. This will be the basis of the SVG size, so is needed to define the width/height of the SVG data.\nTherefore, the base image has its height/width automatically set based on the source, which you can't change. \n\n`<image xlink:href=\"../../../../wp-content/uploads/2020/03/my_image.jpg\" width=\"1280\" height=\"720\" {{params}}></image>`\n\n    Parameter [STRING]\n    The parameter is anything extra you want to add into the image string. Good for adding filters. i.e. filter=\"url(#myfilter)\"\n\n###  5.3. <a name='image_free'></a>image_free\n\nThis will create an `<image>` tag with the image of the source post. The difference here is that no width or height is set. Which is good for overlays and resizing/repositioning.\n\n`<image xlink:href=\"../../../../wp-content/uploads/2020/03/my_image.jpg\" {{params}}></image>`\n\n    Parameter [STRING]\n    The parameter is anything extra you want to add into the image string. Good for adding widths / heights / x /y / filters / etc..\n\n\n###  5.4. <a name='svg_element'></a>svg_element\n\nThis create a layer of anything you want into the SVG at that level. This is used to insert new SVG shapes / Paths / Polygons / Logos / Images / other SVGs / groups / etc...  into it.\n\n`your text`\n\n    Parameter [STRING]\n    Any manual text you want to inject in. \n\n\n###  5.5. <a name='svg_definition'></a>svg_definition\n\nThis creates a layer within the SVG `<defs></defs>` tags at the top. Allows you to insert filters into it.\n\n`your filter text`\n\n    Parameter [STRING]\n    Any manual text you want to inject into the def tags. \n\n\n###  5.6. <a name='noise'></a>noise\n\nCreates a transparent 'noise' layer. This is a tileable img supplied with the plugin. This creates a pattern definition and rectangle element to layer over everything underneath.\n\n    Parameters [INT] 0 to 1.\n    You can control the opacity with the parameter field. \n\n\n###  5.7. <a name='darken'></a>darken\n\nCreates a black rectangle of 100% height and width.\n\n`<rect height=\"100%\" width=\"100%\" x=\"0\" y=\"0\" fill-opacity=\"{{your value}}\" fill=\"#000000\"></rect>`\n\n    Parameters [INT] 0 to 1.\n    You can control the opacity with the parameter field. \n\n\n###  5.8. <a name='whiten'></a>whiten\n\nCreates a white rectangle of 100% height and width.\n\n`<rect height=\"100%\" width=\"100%\" x=\"0\" y=\"0\" fill-opacity=\"{{your value}}\" fill=\"#ffffff\"></rect>`\n\n    Parameters [INT] 0 to 1.\n    You can control the opacity with the parameter field.\n\n\n###  5.9. <a name='random_colour'></a>random_colour\n\nCreates a linear-gradient definition with a random hex colour. \n\n`<linearGradient id=\"{{your id}}\"><stop stop-color=\"#98BC2A\"/></linearGradient>`\n\n    Parameters [STRING] \n    This allows you to set the ID of the linear-gradient definition. Therefore referencing it in any element with a\n    fill=url(#randomID)\n\n###  5.10. <a name='text'></a>text\n\nSimilar to the 'svg_element' layer, but with a caveat... allows you to do text substitutions on wp_post parameters using moustache brackets.\nAs an example, using `{{post_title}}` in the parameter field will be substituted for the actual post_title. It also checks against any ACF fields attached to the post object too.\nJust use the name of the field you wish to return in the moustache brackets. {{my_acf_colour_field_added_to_the_post}}\n\n    Parameters [STRING] \n    Add an element with substitutions with the post object.\n\nThe text substitution also has a few extra 'functions' that you can prefix the field with.\n\n1. `uc:` will make the output text of the field UPPERCASE.\n2. `hy:` will remove everything BEFORE (and including) a hypen. 'HELLO - WORLD' will become 'WORLD'.\n3. `w1:` will split the line by hypens and output the first. 'FIRST - SECOND - THIRD - FOURTH` will return 'FIRST'.\n4. `w2:` will split the line by hypens and output the second. 'FIRST - SECOND WORD - 3RD - FOURTH` will return 'SECOND WORD'.\n5. `w3:` will split the line by hypens and output the third. 'FIRST - SECOND WORD - 3RD - FOURTH` will return '3RD'.\n6. `w3:` will split the line by hypens and output the fourth. 'FIRST - SECOND WORD - 3RD - FOURTH` will return 'FOURTH'.\n\n####  5.10.1. <a name='Example'></a>Example\n\n    <text>{{w2:uc:post_title}}</text>\n    This will split by hypens, output the second one in UPPERCASE.\n\n\n###  5.11. <a name='acf_post_tax_field'></a>acf_post_tax_field\n\nThis will allow the post get ACF fields on the category its attached to. Use the moustache brackets to define the category ACF field you wish to use. Has all functionality of the `text` type layer.\n\n    Parameters [STRING] \n    Add an element with substitutions with the post object.\n\nI created this because my categories have ACF colour fields on them. Any post attached to the category can now get the category colour.\n\n\n###  5.12. <a name='acf_term_field'></a>acf_term_field\n\nOnly available on the 'Category' source. \n\nAllows you to specify an ACF field attached to the taxonomy and output the value. Moushache brackets, same as the `text` layer type.\n\n    Parameters [STRING] \n    Add an element with substitutions with the term object.\n\n\n###  5.13. <a name='acf_term_field_defintion'></a>acf_term_field_defintion\n\nSame as the `acf_term_field` but puts the parameter into the `<defs></defs>` area of the SVG.\n\n\n###  5.14. <a name='generate_shape'></a>generate_shape\n\nThis is the big 'generative' part of the plugin. Allows you to generate shapes onto a patchwork-quilt like space over the image. Also includes moustache {{}} substitution.\n\n    Parameters [ARRAY]\n    Define how the generative art will be created.\n\nThe following settings can be used:\n\n####  5.14.1. <a name='palette'></a>palette\n\nThe 'palette' setting tells the generator which base colours to add to the primary palette. This palette is used to select random colours from.\n\n    'palette' => '{{acf_taxonomy_colour}}, #FAFAFA',\n\n####  5.14.2. <a name='additional_palette'></a>additional_palette\n\nYou can define a secondary palette that the generator can select from and add to the primary palette.\n\n    'additional_palette' => '#000000,#242424,#424242,#757575,#E0E0E0,#F5F5F5,#FAFAFA,#FFFFFF',\n\n####  5.14.3. <a name='additional_colours'></a>additional_colours\n\nHow many random colours to add to the primary palette from the secondary one.\n\n    'additional_colours' => 1,\n\n####  5.14.4. <a name='opacity'></a>opacity\n\nWhat is the opacity of the shapes generated.\n\n    'opacity' => 0.8,\n\n####  5.14.5. <a name='corners'></a>corners\n\nThe generative shapes are added to the corners of the image. This selects which corners to use. If left blank, ALL corners are used.\nOptions are:\n\n1. tl (top left)\n2. tr (top right)\n3. br (bottom right)\n4. bl (bottom left)\n\n\n    'corners' => 'tl,br',\n\n####  5.14.6. <a name='corner_size'></a>corner_size\n\nFurthest number of tiles to come out from the corner.\n\n    'corner_size' => 4,\n\n####  5.14.7. <a name='shapes'></a>shapes\n\nSelect the shapes you wish to randomly pick from. If left blank, ALL shapes are used.\nOptions are:\n\n1. 'rect',\n2. 'cross',\n3. 'square_cross',\n4. 'square_plus',\n5. 'triangle',\n6. 'right_angled_triangle',\n8. 'leaf',\n9. 'dots',\n10. 'lines',\n11. 'wiggles',\n12. 'diamond',\n13. 'flower',\n14. 'stripes',\n15. 'bump',\n\n    'shapes' => 'leaf, cross,bump',\n\n####  5.14.8. <a name='cell_size'></a>cell_size\n\nScale the size of the shape tiles up or down. Number in pixels. Default is 80.\n\n    'cell_size' => 40,\n\n\n\n####  5.14.9. <a name='Example-1'></a>Example\n\n    [\n        'palette' => '{{taxonomy_colour}}, #FAFAFA',\n        'additional_palette' => '#000000,#242424,#424242,#757575,#E0E0E0,#F5F5F5,#FAFAFA,#FFFFFF',\n        'additional_colours' => 1,\n        'opacity' => 0.8,\n        'corners' => 'tl,br',\n        'corner_size' => 4,\n        'shapes' => 'leaf, cross,bump',\n        'cell_size' => 40,\n    ]\n\n\n\n##  6. <a name='Customising'></a> Customising\n\nNone.\n\n##  7. <a name='Troubleshooting'></a>Troubleshooting\n\nNone.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n##  8. <a name='Contributing'></a>Contributing\n\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue.\nDon't forget to give the project a star! Thanks again!\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n##  9. <a name='License'></a>License\n\nDistributed under the MIT License.\n\nMIT License\n\nCopyright (c) 2022 Andy Pearson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n\n##  10. <a name='Contact'></a>Contact\n\nAuthor Link: [https://github.com/IORoot](https://github.com/IORoot)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n##  11. <a name='Changelog'></a>Changelog\n\n- v1.0.0 - Initial Commit\n",
  "readme_html": "https://github.com/IORoot/wp-plugin__pipeline--generative-images/blob/master/README.md",
  "last_cached": "2025-07-29T16:32:52.132Z"
}